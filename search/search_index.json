{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-my-collection-of-notes-for-tbz","title":"Welcome my collection of notes for TBZ","text":"<p>This repository serves as my personal collection of exercises, assignments, notes, and more, all stored in a Markdown editor named Obsidian. The files in this repository are organized by subject and date to help me keep track of my progress and easily find what I need. Everything gets transformed into a static html via a pipeline.</p>"},{"location":"#1-year","title":"1 Year","text":"<ul> <li>M117 - General - IT-Networkstructure</li> <li>M122 - General - Scripting w Bash</li> <li>M162 - General - Data analysis and modelling</li> <li>M164 - General - Database</li> <li>M231 - General - Data protection and security</li> <li>M293 - General - Web Dev</li> </ul>"},{"location":"#2-year","title":"2 Year","text":"<ul> <li>M165- General - NoSQL</li> <li>M320 - General - OOP</li> <li>M322 - General - User Interface, UI;UX</li> <li>M346 - General - Cloud Solutions</li> <li>M426 - General -  Agile Software Development</li> <li>M254 - General - Business Process</li> <li>M114 - General - Cryptography</li> </ul>"},{"location":"#3-year","title":"3 Year","text":"<ul> <li>M450 - General - Testing</li> <li>M183 - General - Security</li> </ul>"},{"location":"#4-year","title":"4 Year","text":"<p>Nothing documented here</p>"},{"location":"#cheatsheets","title":"Cheatsheets","text":"<ul> <li>Docker - Cheatsheet</li> <li>OOP - Cheatsheet</li> <li>Scrum - Cheatsheet</li> <li>NoSQL - Cheatsheet</li> <li>Cloud Solution - Cheatsheet</li> </ul> <p>G\u00f6nn dir mini l\u00f6sige, gib mer eifach en GitHub stern danke</p>"},{"location":"2%20Year/M114%20-%20Cryptography/M114%20-%20General%20-%20Cryptography/","title":"M114   General   Cryptography","text":""},{"location":"2%20Year/M114%20-%20Cryptography/M114%20-%20General%20-%20Cryptography/#course-syllabus","title":"\ud83d\udea9 |  Course Syllabus","text":"<ul> <li>M114 | TBZ | GitLab</li> </ul>"},{"location":"2%20Year/M114%20-%20Cryptography/M114%20-%20General%20-%20Cryptography/#learning-objectives","title":"\ud83d\udca1 |  Learning Objectives","text":""},{"location":"2%20Year/M114%20-%20Cryptography/M114%20-%20General%20-%20Cryptography/#notes-exercises","title":"\ud83d\udcd3 | Notes &amp; Exercises","text":"<ul> <li>Zahlensysteme</li> <li>Optische Codes</li> <li>Huffman-Codierung</li> <li>Lernstandsanalyse Zahlensysteme</li> <li>Komprimierung</li> <li>JPEG-Bildkomprimierung</li> </ul>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Optische%20Codes/","title":"Optische Codes","text":""},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Optische%20Codes/#ocr","title":"OCR","text":""},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Optische%20Codes/#beschreibung","title":"Beschreibung","text":"<p>OCR steht f\u00fcr Optical Character Recognition (Optische Zeichenerkennung). Es ist eine Technologie, die verwendet wird, um gedruckten oder handgeschriebenen Text automatisch in maschinenlesbaren Text umzuwandeln. OCR erm\u00f6glicht es, gedruckten Text von Dokumenten, B\u00fcchern, Schildern usw. zu extrahieren und digital zu verarbeiten.</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Optische%20Codes/#bar","title":"Bar","text":""},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Optische%20Codes/#beschreibung_1","title":"Beschreibung","text":"<p>Ein Barcode ist eine maschinenlesbare Darstellung von Informationen in Form von Strichen und L\u00fccken, die auf Produkten, Verpackungen oder Etiketten gedruckt sind. Barcodes werden verwendet, um Informationen wie Produktcodes, Preise und andere Daten automatisch zu erfassen und zu verarbeiten.</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Optische%20Codes/#funktionsweise","title":"Funktionsweise","text":"<ul> <li>https://www.youtube.com/watch?v=GOYRT3-0IJI</li> </ul> <p> https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.labelfox.com%2Fwp-content%2Fuploads%2F2014%2F02%2FBestandteile_GTIN-13.jpg&amp;f=1&amp;nofb=1&amp;ipt=62faa8de1d9a504a5916d55aec8b88a0a47e537385ab56bc9677cd0daee531ab&amp;ipo=images</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Optische%20Codes/#qr","title":"QR","text":""},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Optische%20Codes/#beschreibung_2","title":"Beschreibung","text":"<p>Ein QR-Code (Quick Response Code) ist ein zweidimensionaler Barcode, der Informationen in Form von quadratischen Modulen speichert. QR-Codes werden h\u00e4ufig f\u00fcr verschiedene Anwendungen eingesetzt, wie z.B. Produktverfolgung, Werbung, mobile Zahlungen und vieles mehr.</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Optische%20Codes/#arten","title":"Arten","text":"<ol> <li> <p>Micro QR-Code: Ein kleiner QR-Code, der weniger Daten speichern kann als ein Standard-QR-Code. Er besteht aus einer Matrix von 17x17 bis 29x29 Modulen.</p> </li> <li> <p>Standard QR-Code: Der am h\u00e4ufigsten verwendete QR-Code-Typ. Er besteht aus einer Matrix von 21x21 bis 177x177 Modulen und kann verschiedene Arten von Daten speichern.</p> </li> <li> <p>Large QR-Code: Ein QR-Code mit einer gr\u00f6\u00dferen Anzahl von Modulen als ein Standard-QR-Code. Er kann bis zu 177x177 oder sogar 233x233 Module umfassen, was bedeutet, dass er mehr Daten speichern kann.</p> </li> <li> <p>High Capacity QR-Code: Ein QR-Code mit erh\u00f6hter Speicherkapazit\u00e4t, der eine gr\u00f6\u00dfere Datenmenge als ein Standard-QR-Code aufnehmen kann. Dies wird durch die Verwendung von mehr Modulen und einer h\u00f6heren Fehlerkorrekturf\u00e4higkeit erreicht.</p> </li> <li> <p>High Density QR-Code: Ein QR-Code, der eine h\u00f6here Informationsdichte aufweist und daher mehr Daten in einem begrenzten Bereich speichern kann. Dies wird erreicht, indem kleinere Module verwendet werden, was zu einer h\u00f6heren Aufl\u00f6sung f\u00fchrt.</p> </li> <li> <p>Error Correction QR-Code: Ein QR-Code, der eine verbesserte Fehlerkorrekturf\u00e4higkeit aufweist, um besch\u00e4digte oder verschmutzte Codes zu erkennen und zu korrigieren. Dadurch bleibt der QR-Code auch dann lesbar, wenn Teile davon unlesbar sind.</p> </li> </ol>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Optische%20Codes/#funktionsweise_1","title":"Funktionsweise","text":"<ul> <li>https://www.youtube.com/watch?v=yiLjWBfQyF4&amp;pp=ygUad2llIGxpZXNzdCBtYW4gZWluIGJhcmNvZGU%3D</li> </ul>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/","title":"Zahlensysteme","text":""},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#baustein-a-oktalsystem","title":"Baustein A: Oktalsystem","text":""},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#beschreibung","title":"Beschreibung:","text":"<p>Das Oktalsystem ist ein Zahlensystem, das auf der Basis 8 aufgebaut ist. Es verwendet die Ziffern von 0 bis 7, um Zahlen darzustellen.</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#umrechnung-vom-oktalsystem-zum-dezimalsystem","title":"Umrechnung vom Oktalsystem zum Dezimalsystem:","text":"<p>Um eine Oktalzahl in eine Dezimalzahl umzuwandeln, multipliziere jede Ziffer der Oktalzahl mit der entsprechenden Potenz von 8 und summiere die Ergebnisse auf.</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#beispiel","title":"Beispiel:","text":"<p>Oktalzahl: 346 Dezimalzahl: (3 * 8^2) + (4 * 8^1) + (6 * 8^0) = 3 * 64 + 4 * 8 + 6 * 1 = 192 + 32 + 6 = 230</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#baustein-b-dualsystem-binarsystem","title":"Baustein B: Dualsystem (Bin\u00e4rsystem)","text":""},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#beschreibung_1","title":"Beschreibung:","text":"<p>Das Dualsystem, auch bekannt als Bin\u00e4rsystem, ist ein Zahlensystem, das auf der Basis 2 aufgebaut ist. Es verwendet die Ziffern 0 und 1, um Zahlen darzustellen.</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#umrechnung-vom-dezimalsystem-ins-dualsystem","title":"Umrechnung vom Dezimalsystem ins Dualsystem:","text":"<p>Um eine Dezimalzahl in eine Dualzahl umzuwandeln, dividiere die Dezimalzahl wiederholt durch 2 und notiere den Rest. Die Bin\u00e4rzahl ergibt sich aus den aufgeschriebenen Resten in umgekehrter Reihenfolge.</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#beispiel_1","title":"Beispiel:","text":"<p>Dezimalzahl: 42 42 : 2 = 21 Rest 0 21 : 2 = 20 Rest 1 ... Dualzahl: Reste (gelesen von unten nach oben) =&gt; 101010</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#baustein-c-hexadezimalsystem","title":"Baustein C: Hexadezimalsystem","text":""},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#beschreibung_2","title":"Beschreibung:","text":"<p>Das Hexadezimalsystem ist ein Zahlensystem, das auf der Basis 16 aufgebaut ist. Es verwendet die Ziffern von 0 bis 9 und die Buchstaben A bis F, um Zahlen darzustellen. Die Buchstaben A bis F repr\u00e4sentieren die Werte 10 bis 15.</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#umrechnung-vom-hexadezimal-ins-dezimalsystem","title":"Umrechnung vom Hexadezimal- ins Dezimalsystem:","text":"<p>Um eine Hexadezimalzahl in eine Dezimalzahl umzuwandeln, multipliziere jede Ziffer der Hexadezimalzahl mit der entsprechenden Potenz von 16 und summiere die Ergebnisse auf.</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#beispiel_2","title":"Beispiel:","text":"<p>Hexadezimalzahl: 2A Dezimalzahl: (2 * 16^1) + (A * 16^0) = 2 * 16 + 10 * 1 = 32 + 10 = 42</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#baustein-d-umrechnung-vom-dual-ins-dezimalsystem-mit-komma","title":"Baustein D: Umrechnung vom Dual- ins Dezimalsystem (mit Komma)","text":""},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#beschreibung_3","title":"Beschreibung:","text":"<p>Die Umrechnung vom Dual- ins Dezimalsystem mit Komma erfolgt \u00e4hnlich wie bei ganzen Zahlen. Der Unterschied besteht darin, dass die Potenzen von 2 negative Exponenten haben.</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#umrechnung-vom-dual-ins-dezimalsystem-mit-komma","title":"Umrechnung vom Dual- ins Dezimalsystem (mit Komma):","text":"<p>Um eine Dualzahl mit Komma in eine Dezimalzahl umzuwandeln, multipliziere jede Ziffer der Dualzahl mit der entsprechenden Potenz von 2 und summiere die Ergebnisse auf. Die Potenzen haben negative Exponenten, beginnend mit -1 f\u00fcr die erste Nachkommastelle.</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#beispiel_3","title":"Beispiel:","text":"<p>Dualzahl: 101.11 Dezimalzahl: (1 * 2^2) + (0 * 2^1) + (1 * 2^0) + (1 * 2^-1) + (1 * 2^-2) = 4 + 0 + 1 + 0.5 + 0.25 = 23</p> <p> https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fwww.allgemeinbildung.ch%2Farb%2Farb%3Dmat%2Fw_LernPlakate_MAT_Zahlensysteme-Vergleich.jpg&amp;f=1&amp;nofb=1&amp;ipt=33e0e701124acfbe3b680d88f1fce43834823b28bad9e0d57f03bc3c65b90bbb&amp;ipo=images</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%201/Zahlensysteme/#binar-zu-dezimal","title":"Binar zu Dezimal","text":"<p>101010 = (101010)\u2082 = (1 \u00d7 2\u2075) + (0 \u00d7 2\u2074) + (1 \u00d7 2\u00b3) + (0 \u00d7 2\u00b2) + (1 \u00d7 2\u00b9) + (0 \u00d7 2\u2070) = (42)\u2081\u2080</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%202/Huffman-Codierung/","title":"Huffman Codierung","text":"<p>https://www.youtube.com/watch?v=eSlpTPXbhYw</p> <p>Angenommen, wir haben den folgenden Text: \"BAUMGARTEN\".</p> <p>Schritt 1: H\u00e4ufigkeitsanalyse Wir z\u00e4hlen die H\u00e4ufigkeit jedes Zeichens im Text:</p> <p>A: 2-mal B: 1-mal M: 1-mal G: 1-mal R: 1-mal T: 1-mal E: 1-mal N: 1-mal</p> <p>Schritt 2: Erstellung des Huffman-Baums Wir erstellen einen Huffman-Baum, indem wir die Zeichen und ihre H\u00e4ufigkeiten ber\u00fccksichtigen:</p> <p> Schritt 3: Codierung Die Codierung erfolgt, indem man den Huffman-Baum durchl\u00e4uft und jedem Zeichen ein Codewort zuweist:</p> <p>A: 10 B: 1110 M: 1100 G: 1101 R: 010 T: 011 E: 000 N: 001</p> <p>Schritt 4: Codierung der Daten Wir verwenden die erhaltenen Codew\u00f6rter, um die urspr\u00fcnglichen Daten zu codieren. Der urspr\u00fcngliche Text \"BAUMGARTEN\" wird folgenderma\u00dfen codiert:</p> <p>Codierung: 001000111011011101111011111110</p> <p>Die Huffman-Codierung erm\u00f6glicht eine effiziente Komprimierung, da h\u00e4ufige Zeichen mit k\u00fcrzeren Codew\u00f6rtern codiert werden. Bei der Dekodierung wird der Huffman-Baum verwendet, um die codierten Daten in den urspr\u00fcnglichen Text zur\u00fcckzuwandeln, indem die Codew\u00f6rter sequenziell abgeglichen werden.</p>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%202/Lernstandsanalyse%20Zahlensysteme/","title":"Lernstandsanalyse Zahlensysteme","text":"<pre><code>was ist X hoch 0 = 1\n16 hoch 1 =   16 (entspricht 2 hoch 4)  |\n16 hoch 2 =  256 (entspricht 2 hoch 8)  | --&gt; was f\u00e4llt hier auf?\n16 hoch 3 = 4096 (entspricht 2 hoch 12) |\n       1 (dez) =      0001 (bin) |      4 (dez) =         4 (hex) \n      10 (dez) =      1010 (bin) |     15 (dez) =         F (hex)\n     126 (dez) = ???? ???? (bin) |     32 (dez) =         20 (hex)\n    1298 (dez) = ???? ???? (bin) |   1298 (dez) =       512 (hex)\n\n    0001 (bin) =         1 (dez) |  f\u00fcr die Schnelleren\n    1111 (bin) =         15 (dez) |     23'283 (dez) =  ???? (hex)\n 10'1010 (bin) =        ?? (dez) |  1011'1011 (bin) =   ??? (dez)\n101'1001 (bin) =        ?? (dez) |\n3 (hex) =  3 (dez) =  0011 (bin) |   5AF3 (hex) =    ??'??? (dez)\n5 (hex) =  5 (dez) =  0101 (bin) |   5AF3 (hex) = ???? ???? (bin)\nA (hex) =  10 (dez) = 1010 (bin) |        --&gt; was f\u00e4llt hier auf?\nF (hex) =  15 (dez) = 1111 (bin) |\n</code></pre>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%203/JPEG-Bildkomprimierung/","title":"JPEG Bildkomprimierung","text":""},{"location":"2%20Year/M114%20-%20Cryptography/Day%203/JPEG-Bildkomprimierung/#funktionsweise","title":"Funktionsweise","text":"<ol> <li>Farbraumkonvertierung: Zun\u00e4chst wird das Eingangsbild vom RGB-Farbraum in den YCbCr-Farbraum umgewandelt. Dabei werden die Helligkeitsinformationen (Y) und die Farbdifferenzinformationen (Cb und Cr) getrennt.   </li> <li>Unterteilung in Bl\u00f6cke: Das Bild wird in kleine 8x8-Bl\u00f6cke aufgeteilt. Jeder Block enth\u00e4lt Informationen \u00fcber die Helligkeit und Farbunterschiede.</li> <li>Diskrete Kosinustransformation (DCT): F\u00fcr jeden 8x8-Block wird eine DCT durchgef\u00fchrt. Dies bedeutet, dass die Blockdaten in den Frequenzbereich umgewandelt werden. Die DCT erzeugt Koeffizienten, die die Beitr\u00e4ge der verschiedenen Frequenzen im Block darstellen.</li> <li>Quantisierung: Die DCT-Koeffizienten werden quantisiert, indem sie durch vordefinierte Quantisierungstabellen geteilt werden. Dadurch werden die weniger signifikanten Koeffizienten aufgerundet oder auf Null gesetzt. Die Quantisierung f\u00fchrt zu einer deutlichen Reduzierung der Datenmenge.</li> <li>Huffman-Codierung: Die quantisierten Koeffizienten werden Huffman-codiert. Dabei werden h\u00e4ufig auftretende Koeffizienten mit kurzen Bitfolgen codiert, w\u00e4hrend seltene Koeffizienten l\u00e4ngere Bitfolgen erhalten. Dies erm\u00f6glicht eine effiziente Darstellung der Daten.</li> </ol>"},{"location":"2%20Year/M114%20-%20Cryptography/Day%203/JPEG-Bildkomprimierung/#probleme-artefakte","title":"Probleme: Artefakte","text":"<ul> <li>Blockartefakte: Bei starken Kompressionsraten k\u00f6nnen die 8x8-Bl\u00f6cke sichtbare Kanten oder Muster erzeugen. Dies tritt auf, weil Informationen innerhalb der Bl\u00f6cke verloren gehen und das Auge die Diskontinuit\u00e4ten wahrnimmt.</li> <li>Farbartefakte: Die Farbunterschiede (Cb und Cr) werden bei der Quantisierung st\u00e4rker komprimiert als die Helligkeitsinformationen (Y). Dadurch k\u00f6nnen ungenaue Farbwerte und sichtbare Farbverzerrungen auftreten.</li> <li>Ringartefakte: In Bereichen mit starken Farb\u00fcberg\u00e4ngen k\u00f6nnen sogenannte \"Ringartefakte\" auftreten. Dies \u00e4u\u00dfert sich in Form von unerw\u00fcnschten Ringen oder Wellen, die um kontrastreiche Kanten herum sichtbar sind.</li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/M165-%20General%20-%20NoSQL/","title":"M165  General   NoSQL","text":""},{"location":"2%20Year/M165%20-%20NoSQL/M165-%20General%20-%20NoSQL/#course-syllabus","title":"\ud83d\udea9 |  Course Syllabus","text":"<ul> <li>M165 | TBZ | Gitlab</li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/M165-%20General%20-%20NoSQL/#learning-objectives","title":"\ud83d\udca1 |  Learning Objectives","text":"<ul> <li>NoSQL</li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/M165-%20General%20-%20NoSQL/#notes","title":"\ud83d\udcd3 | Notes","text":""},{"location":"2%20Year/M165%20-%20NoSQL/M165-%20General%20-%20NoSQL/#project","title":"\ud83d\udccd| Project","text":""},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/","title":"NoSQL   Cheatsheet","text":""},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#definition","title":"Definition","text":"<ul> <li>NoSQL is a database approach that provides flexible data models and scalability for handling large amounts of unstructured and semi-structured data.</li> <li>NoSQL databases prioritize scalability, performance, and high availability.</li> <li>It indicates literally every database that doesn't use SQL.</li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#key-characteristics","title":"Key Characteristics","text":"<ul> <li>Schema-less: No predefined schema; allows flexible and dynamic data structures.</li> <li>Distributed Architecture: Data is distributed across multiple nodes to achieve scalability and fault tolerance.</li> <li>High Scalability: Designed to handle massive amounts of data and concurrent users.</li> <li>Flexible Data Models: Supports various data models like key-value, document, columnar, and graph.</li> <li>Horizontal Scaling: Scales horizontally by adding more machines to the system.</li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#common-nosql-databases","title":"Common NoSQL Databases","text":"<ul> <li>Document Databases: MongoDB</li> <li>Key-Value Databases: Redis</li> <li>Columnar Databases: Cassandra, HBase</li> <li>Graph Databases: Neo4j, Amazon Neptune</li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#mongodb","title":"MongoDB","text":""},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#installation","title":"Installation","text":"<ul> <li>Download MongoDB Community Edition: https://www.mongodb.com/try/download/community</li> <li>Extract the downloaded archive and add the MongoDB binaries to the system PATH.</li> <li>Or just run a docker container (its better)</li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#starting-mongodb-cli","title":"Starting MongoDB CLI","text":"<ul> <li>Open a command prompt or terminal.</li> <li>Run the following command to start the MongoDB CLI:   <pre><code>mongo\n</code></pre></li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#connecting-to-mongodb","title":"Connecting to MongoDB","text":"<ul> <li>By default, the MongoDB CLI connects to a MongoDB server running on <code>localhost</code> and port <code>27017</code>.</li> <li>Connect to a specific server and port:   <pre><code>mongo --host &lt;hostname&gt;:&lt;port&gt;\n</code></pre></li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#switching-databases","title":"Switching Databases","text":"<ul> <li>Use the <code>use</code> command to switch to a specific database:   <pre><code>use &lt;database_name&gt;\n</code></pre></li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#working-with-collections","title":"Working with Collections","text":"<ul> <li> <p>Show all collections in the current database: <pre><code>show collections\n</code></pre></p> </li> <li> <p>Create a new collection: <pre><code>db.createCollection(\"&lt;collection_name&gt;\")\n</code></pre></p> </li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#querying-documents","title":"Querying Documents","text":"<ul> <li> <p>Find all documents in a collection: <pre><code>db.&lt;collection_name&gt;.find()\n</code></pre></p> </li> <li> <p>Find documents matching a specific condition: <pre><code>db.&lt;collection_name&gt;.find({ &lt;field&gt;: &lt;value&gt; })\n</code></pre></p> </li> <li> <p>Find a single document in a collection: <pre><code>db.&lt;collection_name&gt;.findOne({ &lt;field&gt;: &lt;value&gt; })\n</code></pre></p> </li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#inserting-documents","title":"Inserting Documents","text":"<ul> <li>Insert a document into a collection: <pre><code>db.&lt;collection_name&gt;.insertOne({ &lt;field&gt;: &lt;value&gt; })\n</code></pre></li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#updating-documents","title":"Updating Documents","text":"<ul> <li>Update a document in a collection: <pre><code>db.&lt;collection_name&gt;.updateOne({ &lt;field&gt;: &lt;value&gt; }, { $set: { &lt;field&gt;: &lt;new_value&gt; } })\n</code></pre></li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#deleting-documents","title":"Deleting Documents","text":"<ul> <li>Delete a document from a collection: <pre><code>db.&lt;collection_name&gt;.deleteOne({ &lt;field&gt;: &lt;value&gt; })\n</code></pre></li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#indexing","title":"Indexing","text":"<ul> <li>Create an index on a field in a collection: <pre><code>db.&lt;collection_name&gt;.createIndex({ &lt;field&gt;: 1 })\n</code></pre></li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#aggregation-framework","title":"Aggregation Framework","text":"<p>Aggregation Keys:</p> <ul> <li><code>$match</code>: Filters documents based on specified criteria.</li> <li><code>$group</code>: Groups documents by a specified key and performs aggregations on grouped data.</li> <li><code>$project</code>: Shapes the output documents by specifying the inclusion/exclusion of fields and creating computed fields.</li> <li><code>$sort</code>: Sorts documents based on specified criteria.</li> <li><code>$limit</code>: Limits the number of documents passed to the next stage.</li> <li><code>$skip</code>: Skips a specified number of documents and passes the remaining documents to the next stage.</li> <li><code>$unwind</code>: Deconstructs an array field into multiple separate documents.</li> <li><code>$lookup</code>: Performs a left outer join on two collections.</li> <li><code>$addFields</code>: Adds new fields to the documents with specified values.</li> <li><code>$replaceRoot</code>: Replaces the document with the specified embedded document.</li> <li> <p><code>$group</code> Accumulator Operators: <code>$sum</code>, <code>$avg</code>, <code>$min</code>, <code>$max</code>, <code>$push</code>, <code>$addToSet</code>, <code>$first</code>, <code>$last</code>, and more.</p> </li> <li> <p>Perform aggregation operations on a collection: <pre><code>db.&lt;collection_name&gt;.aggregate([ { $match: { &lt;field&gt;: &lt;value&gt; } }, { $group: { _id: \"$&lt;field&gt;\", count: { $sum: 1 } } } ])\n</code></pre></p> </li> </ul>"},{"location":"2%20Year/M165%20-%20NoSQL/NoSQL%20-%20Cheatsheet/#exit-mongodb-cli","title":"Exit MongoDB CLI","text":"<ul> <li>To exit the MongoDB CLI, run: <pre><code>exit\n</code></pre></li> </ul>"},{"location":"2%20Year/M254%20-%20Business%20Process/M254%20-%20General%20-%20Business%20Process/","title":"M254   General   Business Process","text":""},{"location":"2%20Year/M254%20-%20Business%20Process/M254%20-%20General%20-%20Business%20Process/#course-syllabus","title":"\ud83d\udea9 |  Course Syllabus","text":"<ul> <li>M254 | TBZ | GitLab</li> </ul>"},{"location":"2%20Year/M254%20-%20Business%20Process/M254%20-%20General%20-%20Business%20Process/#learning-objectives","title":"\ud83d\udca1 |  Learning Objectives","text":""},{"location":"2%20Year/M254%20-%20Business%20Process/M254%20-%20General%20-%20Business%20Process/#notes-exercises","title":"\ud83d\udcd3 | Notes &amp; Exercises","text":""},{"location":"2%20Year/M254%20-%20Business%20Process/M254%20-%20General%20-%20Business%20Process/#day-1","title":"Day 1","text":"<ul> <li>Aufgabe 1 - Onboarding neuer Mitarbeitender</li> <li>Aufgabe 2 - Begriffe des Gesch\u00e4ftsprozessmanagements</li> <li>Aufgabe 2 - Begriffe der Grundlagen von GPM</li> <li>Aufgabe 3 - Identifikation von Gesch\u00e4ftsprozessen</li> <li>Was macht eine gute Firma aus</li> </ul>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%201/Aufgabe%201%20-%20Onboarding%20neuer%20Mitarbeitender/","title":"Aufgabe 1   Onboarding neuer Mitarbeitender","text":""},{"location":"2%20Year/M254%20-%20Business%20Process/Day%201/Aufgabe%201%20-%20Onboarding%20neuer%20Mitarbeitender/#prozess","title":"Prozess","text":"<ol> <li> <p>Vorbereitung vor dem ersten Arbeitstag:</p> <ul> <li>HR-Abteilung erstellt einen neuen Mitarbeiterdatensatz im HR-System.</li> <li>IT-Abteilung richtet die erforderlichen Zugriffsrechte auf IT-Systeme ein.</li> <li>Bereitstellung von Zugangsdaten und Anmeldeinformationen f\u00fcr die verschiedenen internen Systeme.</li> </ul> </li> <li> <p>Begr\u00fc\u00dfung und Einf\u00fchrung am ersten Arbeitstag:</p> <ul> <li>Neuer Mitarbeiter wird von einem HR-Vertreter empfangen und begr\u00fc\u00dft.</li> <li>HR-Vertreter stellt allgemeine Informationen \u00fcber das Unternehmen, die Kultur und die Arbeitsbedingungen vor.</li> <li>Einf\u00fchrung in die Unternehmensrichtlinien, Arbeitszeitregelungen und sonstige relevante interne Vorschriften.</li> <li>Bereitstellung von Arbeitsmaterialien wie Laptop, Mobiltelefon, B\u00fcromaterial, etc.</li> </ul> </li> <li> <p>Teamintegration und Einf\u00fchrung in die Abteilung:</p> <ul> <li>Vorstellung des neuen Mitarbeiters im Team und Einf\u00fchrung der Teammitglieder.</li> <li>\u00dcberblick \u00fcber die Team</li> </ul> </li> <li> <p>Vorstellung des neuen Mitarbeiters im Team:</p> <ul> <li>Der Vorgesetzte oder ein daf\u00fcr verantwortlicher Mitarbeiter stellt den neuen Mitarbeiter den Teammitgliedern vor.</li> <li>Es werden Informationen zu Hintergrund, Erfahrungen und Kompetenzen des neuen Mitarbeiters geteilt.</li> <li>Ziel ist es, eine positive Arbeitsbeziehung aufzubauen und das Vertrauen zwischen den Teammitgliedern zu st\u00e4rken.</li> </ul> </li> <li> <p>Einf\u00fchrung in die Teamstruktur:</p> <ul> <li>Dem neuen Mitarbeiter wird ein \u00dcberblick \u00fcber die Teamstruktur gegeben.</li> <li>Informationen zu den verschiedenen Rollen und Positionen innerhalb des Teams werden vermittelt.</li> <li>Der Mitarbeiter erh\u00e4lt Einblick in die Hierarchie und die Beziehungen zwischen den Teammitgliedern.</li> </ul> </li> <li> <p>Erkl\u00e4rung der Aufgaben und Verantwortlichkeiten:    </p> <ul> <li>Jedes Teammitglied wird vorgestellt und seine spezifischen Aufgaben und Verantwortlichkeiten werden erl\u00e4utert.</li> <li>Der neue Mitarbeiter erh\u00e4lt Informationen dar\u00fcber, an wen er sich bei Fragen oder Problemen in bestimmten Bereichen wenden kann.</li> <li>Es wird deutlich gemacht, wie die Zusammenarbeit und die Kommunikation innerhalb des Teams ablaufen.</li> </ul> </li> <li> <p>Integration in Teamaktivit\u00e4ten:</p> <ul> <li>Der neue Mitarbeiter wird in Teamaktivit\u00e4ten wie Meetings, Projekte oder Teambuilding-Veranstaltungen eingebunden.</li> <li>Ziel ist es, den Mitarbeiter in das Team zu integrieren, den Teamgeist zu st\u00e4rken und die Zusammenarbeit zu f\u00f6rdern.</li> <li>Es werden M\u00f6glichkeiten geschaffen, um informelle Beziehungen innerhalb des Teams aufzubauen und den Austausch von Wissen und Erfahrungen zu erm\u00f6glichen.</li> </ul> </li> <li> <p>Evaluierung und Feedback:</p> <ul> <li>Regelm\u00e4\u00dfige Evaluierung der Fortschritte und Leistung des neuen Mitarbeiters.</li> <li>Feedbackgespr\u00e4che, um St\u00e4rken und Entwicklungsbereiche zu identifizieren und Unterst\u00fctzung anzubieten, um die Leistung zu verbessern.</li> <li>Unterst\u00fctzung bei der beruflichen Weiterentwicklung und Karriereplanung des Mitarbeiters.</li> </ul> </li> </ol>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%201/Aufgabe%201%20-%20Onboarding%20neuer%20Mitarbeitender/#flowdiagramm","title":"Flowdiagramm","text":""},{"location":"2%20Year/M254%20-%20Business%20Process/Day%201/Aufgabe%202%20-%20Begriffe%20des%20Gesch%C3%A4ftsprozessmanagements/","title":"Aufgabe 2   Begriffe des Gesch\u00e4ftsprozessmanagements","text":"<p>Thema: Nutzen von GPM - Gesch\u00e4ftsprozessmanagement GPM bezieht sich auf die Verwaltung, Optimierung und \u00dcberwachung der verschiedenen Prozesse in einem Unternehmen, um die Effizienz, Produktivit\u00e4t und Kundenzufriedenheit zu verbessern. Lassen Sie uns einen genaueren Blick auf die Vorteile von GPM werfen.</p> <p>1. Prozessverbesserung und Effizienzsteigerung:  -   Analyse und Optimierung der Prozesse f\u00fcr Zeit- und Kosteneinsparungen -   Beseitigung von Engp\u00e4ssen und Redundanzen - GPM hilft Unternehmen, ihre Gesch\u00e4ftsprozesse zu analysieren und zu optimieren. Durch die Identifizierung von Engp\u00e4ssen, Redundanzen oder ineffizienten Abl\u00e4ufen k\u00f6nnen diese Prozesse verbessert werden. Eine effizientere Ausf\u00fchrung der Prozesse f\u00fchrt zu Zeit- und Kosteneinsparungen und tr\u00e4gt zur Steigerung der Produktivit\u00e4t bei.</p> <p>2. Kundenzufriedenheit und Qualit\u00e4t:  -   Anpassung der Prozesse an Kundenbed\u00fcrfnisse f\u00fcr bessere Servicequalit\u00e4t -   Schnellere Bearbeitung von Anfragen, Bestellungen und Beschwerden - Durch GPM k\u00f6nnen Unternehmen ihre Prozesse besser auf die Bed\u00fcrfnisse der Kunden ausrichten. Eine effektive Gestaltung und Optimierung der Prozesse erm\u00f6glicht eine schnellere und pr\u00e4zisere Bearbeitung von Kundenanfragen, Bestellungen oder Beschwerden. Dies f\u00fchrt zu einer h\u00f6heren Kundenzufriedenheit und verbesserten Servicequalit\u00e4t.</p> <p>3. Transparenz und Steuerung:  -   Verwendung von Prozesslandkarten und Dokumentationen f\u00fcr klaren \u00dcberblick -   Bessere Koordination und \u00dcberwachung der Prozesse im Unternehmen - GPM erm\u00f6glicht es Unternehmen, ihre Gesch\u00e4ftsprozesse transparent darzustellen. Mit Hilfe von Prozesslandkarten und -dokumentationen erhalten die Mitarbeiter einen klaren \u00dcberblick \u00fcber die Zusammenh\u00e4nge und Abh\u00e4ngigkeiten der verschiedenen Prozesse. Dies erm\u00f6glicht eine bessere Steuerung, \u00dcberwachung und Koordination der Prozesse innerhalb des Unternehmens.</p> <p>4. Risikominimierung und Compliance:  -   Identifizierung von Risiken und Schwachstellen in den Prozessen -   Einhaltung von Compliance-Vorschriften zur Vermeidung von Verst\u00f6\u00dfen - Durch GPM k\u00f6nnen Unternehmen potenzielle Risiken und Schwachstellen in ihren Prozessen identifizieren und entsprechende Ma\u00dfnahmen ergreifen. Eine systematische \u00dcberwachung und Kontrolle der Prozesse tr\u00e4gt zur Minimierung von Fehlern, Betrugsf\u00e4llen oder Verst\u00f6\u00dfen gegen Compliance-Vorschriften bei.</p> <p>5. Innovationsf\u00f6rderung:  -   Kontinuierliche Verbesserung und Einf\u00fchrung innovativer Ans\u00e4tze -   Schaffung einer lern- und anpassungsf\u00e4higen Unternehmenskultur - GPM schafft eine Grundlage f\u00fcr kontinuierliche Verbesserung und Innovation. Durch die regelm\u00e4\u00dfige Analyse und Optimierung der Prozesse k\u00f6nnen Unternehmen innovative Ans\u00e4tze identifizieren und einf\u00fchren, um ihre Wettbewerbsf\u00e4higkeit zu steigern. GPM f\u00f6rdert eine Kultur des Lernens und der Anpassung, die f\u00fcr die langfristige Entwicklung eines Unternehmens entscheidend ist.</p> <p>Zusammenfassend l\u00e4sst sich sagen, dass Gesch\u00e4ftsprozessmanagement zahlreiche Vorteile bietet, um die Effizienz, Qualit\u00e4t, Kundenzufriedenheit und Innovation in einem Unternehmen zu steigern. Indem Unternehmen ihre Prozesse analysieren, optimieren und kontinuierlich verbessern, k\u00f6nnen sie ihre Wettbewerbsf\u00e4higkeit st\u00e4rken und langfristigen Erfolg gew\u00e4hrleisten.</p>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%202%20-%20Begriffe%20der%20Grundlagen%20von%20GPM/","title":"Aufgabe 2   Begriffe der Grundlagen von GPM","text":""},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%202%20-%20Begriffe%20der%20Grundlagen%20von%20GPM/#nutzung-von-gpm","title":"Nutzung von GPM","text":"<ul> <li>GPM, Gesch\u00e4ftsprozessmanagement, bezieht sich auf die Verwaltung, Optimierung und \u00dcberwachung verschiedenen Prozesse in einem Unternehmen.</li> <li>Das Ziel ist die Produktivit\u00e4t, Effizienz und Kundenzufriedenheit zu verbessern.</li> </ul>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%202%20-%20Begriffe%20der%20Grundlagen%20von%20GPM/#prozesslandkarte-und-prozess-kategorien","title":"Prozesslandkarte und Prozess-Kategorien","text":"<ul> <li>Eine Prozesslandkarte ist eine visuelle Darstellung der Gesch\u00e4ftsprozesse. </li> <li>Sie zeigt die verschiedenen Prozesse, deren Beziehungen und Abh\u00e4ngigkeiten. </li> <li> <p>Die Prozesslandkarte hilft dabei, einen \u00dcberblick \u00fcber die gesamten Abl\u00e4ufe eines Unternehmens zu gewinnen.</p> </li> <li> <p>Prozess-Kategorien sind Gruppierungen von \u00e4hnlichen oder verwandten Prozessen. </p> </li> <li>Sie dienen dazu, die Prozesse in der Prozesslandkarte zu strukturieren und zu organisieren. </li> <li>Durch die Zuordnung von Prozessen zu Kategorien k\u00f6nnen Zusammenh\u00e4nge und Beziehungen zwischen den verschiedenen Abl\u00e4ufen eines Unternehmens deutlicher werden.</li> </ul>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%202%20-%20Begriffe%20der%20Grundlagen%20von%20GPM/#prozess-kategorien","title":"Prozess-Kategorien:","text":"<p>Management Processes: - Verantwortlich f\u00fcr die strategische Planung, Ausrichtung und F\u00fchrung des Projekts - Umfasst Entscheidungsfindung, Zielsetzung, \u00dcberwachung und Kontrolle des Projekts - Fokussiert auf die Gesamtf\u00fchrung und das Management der Projektressourcen</p> <p>Core Processes:</p> <ul> <li>Kernprozesse, die direkt zur Erreichung der Projektziele beitragen</li> <li>Enth\u00e4lt die Hauptaktivit\u00e4ten, die zur Durchf\u00fchrung des Projekts erforderlich sind</li> <li>Beispiele umfassen Planung, Ausf\u00fchrung, \u00dcberwachung und Abschluss des Projekts</li> </ul> <p>Support Processes:</p> <ul> <li>Unterst\u00fctzende Prozesse, die den Kernprozessen dienen</li> <li>Bietet zus\u00e4tzliche Unterst\u00fctzung und Ressourcen f\u00fcr den reibungslosen Ablauf des Projekts</li> <li>Beispiele umfassen Risikomanagement, Qualit\u00e4tsmanagement, Kommunikationsmanagement und Beschaffungsmanagement</li> </ul> <p></p> <p>Adonis</p> <p>Die Prozesslandkarte und die Prozess-Kategorien helfen dabei, die Gesch\u00e4ftsprozesse einer Organisation besser zu verstehen, Engp\u00e4sse zu identifizieren, Verbesserungspotenziale aufzudecken und die Effizienz sowie die Qualit\u00e4t der Abl\u00e4ufe zu steigern.</p> <p>\"Man weiss was man tun muss und was getan wurde\"</p>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%202%20-%20Begriffe%20der%20Grundlagen%20von%20GPM/#aufbau-und-ablauforganisation","title":"Aufbau- und Ablauforganisation","text":""},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%202%20-%20Begriffe%20der%20Grundlagen%20von%20GPM/#aufbauorganisation-wie-ist-das-unternehmen-strukturiert","title":"Aufbauorganisation: Wie ist das Unternehmen strukturiert?","text":"<ul> <li>Hierarchieebenen und Berichtswege</li> <li>Zust\u00e4ndigkeiten und Verantwortlichkeiten</li> <li>Organigramme und Stellenbeschreibungen</li> </ul>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%202%20-%20Begriffe%20der%20Grundlagen%20von%20GPM/#ablauforganisation-wie-laufen-die-arbeitsablaufe-im-unternehmen-ab","title":"Ablauforganisation: Wie laufen die Arbeitsabl\u00e4ufe im Unternehmen ab?","text":"<ul> <li>Sequenzielle Anordnung der Aufgaben</li> <li>Verantwortlichkeiten und Zust\u00e4ndigkeiten</li> <li>Informations- und Ressourcenfluss</li> <li>Effizienzsteigerung und Produktivit\u00e4tsverbesserung</li> </ul>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%202%20-%20Begriffe%20der%20Grundlagen%20von%20GPM/#aufbau-und-ablauforganisation-erganzen-sich","title":"Aufbau- und Ablauforganisation erg\u00e4nzen sich:","text":"<ul> <li>Aufbauorganisation schafft klare Strukturen und Entscheidungswege</li> <li>Ablauforganisation sorgt f\u00fcr reibungslose und effiziente Abl\u00e4ufe</li> </ul> <p>Merke:  Aufbau = Struktur, Hierarchie, Zust\u00e4ndigkeiten;  Ablauf = Arbeitsabl\u00e4ufe, Sequenz, Effizienz</p>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%202%20-%20Begriffe%20der%20Grundlagen%20von%20GPM/#prozessanalyse-und-optimierung","title":"Prozessanalyse und Optimierung","text":""},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%202%20-%20Begriffe%20der%20Grundlagen%20von%20GPM/#prozessanalyse-untersuchung-von-ablaufen","title":"Prozessanalyse: Untersuchung von Abl\u00e4ufen","text":"<ul> <li>Prozessanalyse befasst sich mit der Untersuchung und dem Verst\u00e4ndnis von Abl\u00e4ufen innerhalb eines Unternehmens oder einer Organisation. </li> <li>Engp\u00e4sse, Schwachstellen und ineffiziente Bereiche identifizieren. </li> <li>Ziel: Verstehen, wie ein Prozess abl\u00e4uft</li> </ul>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%202%20-%20Begriffe%20der%20Grundlagen%20von%20GPM/#prozessoptimierung-verbesserung-der-ablaufe","title":"Prozessoptimierung: Verbesserung der Abl\u00e4ufe","text":"<ul> <li>Prozessoptimierung zielt darauf ab, die identifizierten Problembereiche zu verbessern und die Abl\u00e4ufe effizienter zu gestalten. </li> <li>Ziel: Effizientere und reibungslosere Prozesse</li> <li>Eliminierung von Verschwendung und unn\u00f6tigen Schritten</li> <li>Nutzung von Best Practices und modernen Tools</li> <li>Reduzierung von Durchlaufzeiten und Kosten</li> </ul> <p>Merke: Analyse = Untersuchung, Verstehen; Optimierung = Verbesserung, Effizienzsteigerung</p>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%202%20-%20Begriffe%20der%20Grundlagen%20von%20GPM/#beispiel-bestellprozess-in-einem-online-shop","title":"Beispiel: Bestellprozess in einem Online-Shop","text":"<ul> <li>Analyse: Schrittweise Untersuchung der einzelnen Aufgaben, wie Auswahl, Bestellung, Bezahlung und Versand</li> <li>Identifizierung von Engp\u00e4ssen, wie langsame Zahlungsabwicklung oder fehlende Lagerbestandsaktualisierung</li> <li>Optimierung: Einf\u00fchrung eines schnelleren Zahlungssystems, automatische Bestandsaktualisierung und optimierte Versandprozesse</li> <li>Ergebnis: Schnellere Bestellabwicklung, weniger Fehler und zufriedenere Kunden</li> </ul>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%203%20-%20Identifikation%20von%20Gesch%C3%A4ftsprozessen/","title":"Aufgabe 3   Identifikation von Gesch\u00e4ftsprozessen","text":""},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%203%20-%20Identifikation%20von%20Gesch%C3%A4ftsprozessen/#unternehmen-auswahlen","title":"Unternehmen ausw\u00e4hlen","text":"<p>Als Unternehmen f\u00fcr die Identifikation von Gesch\u00e4ftsprozessen habe ich Apple ausgew\u00e4hlt. </p>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%203%20-%20Identifikation%20von%20Gesch%C3%A4ftsprozessen/#mindestens-4-geschaftsprozesse-identifizieren-und-kategorisieren","title":"Mindestens 4 Gesch\u00e4ftsprozesse identifizieren und kategorisieren","text":"<ol> <li>Kernprozess:<ul> <li>Produktentwicklungsprozess: Design und Entwicklung neuer Produkte.</li> </ul> </li> <li>Managementprozess: <ul> <li>Vertriebsprozess: Apple Store Management.</li> </ul> </li> <li>Unterst\u00fctzungsprozesse:<ul> <li>Lieferkettenprozess: Beschaffung und Logistik.</li> <li>Kundensupportprozess: Technischer Support und Kundendienst.</li> </ul> </li> </ol>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Aufgabe%203%20-%20Identifikation%20von%20Gesch%C3%A4ftsprozessen/#geschaftsprozesse-textuell-beschreiben","title":"Gesch\u00e4ftsprozesse textuell beschreiben","text":"<ol> <li> <p>Vertriebsprozess - Apple Store Management:</p> <ul> <li>Standortauswahl f\u00fcr neue Stores, Personalbeschaffung und -schulung, Produktdarstellung und -pr\u00e4sentation, Bestandsverwaltung, Verkaufsabwicklung und Kundenservice.</li> </ul> </li> <li> <p>Produktentwicklungsprozess - Design und Entwicklung neuer Produkte:</p> <ul> <li>Markt- und Trendanalyse, Ideengenerierung, Konzeptentwicklung, Produktdesign, Prototypenerstellung, Test und Validierung, Massenproduktion.</li> </ul> </li> <li> <p>Lieferkettenprozess - Beschaffung und Logistik:</p> <ul> <li>Lieferantenmanagement, Bestellabwicklung, Qualit\u00e4tskontrolle, Lagerhaltung, Versand und Logistik, Nachverfolgung der Lieferungen.</li> </ul> </li> <li> <p>Kundensupportprozess - Technischer Support und Kundendienst:</p> <ul> <li>Kundenkommunikation, Fehlerdiagnose und -behebung, Reparatur- und Austauschservices, R\u00fcckgabeverwaltung, Kundenfeedback und -bewertungen.</li> </ul> </li> </ol>"},{"location":"2%20Year/M254%20-%20Business%20Process/Day%202/Was%20macht%20eine%20gute%20Firma%20aus/","title":"Was macht eine gute Firma aus","text":"<ul> <li>Klare Vision und Mission</li> <li>Hohe Produkt- oder Dienstleistungsqualit\u00e4t</li> <li>Starke Kundenorientierung</li> <li>Effektive Kommunikation</li> <li>Transparente und verantwortungsbewusste F\u00fchrung</li> <li>Engagierte und motivierte Mitarbeiter</li> <li>Innovationsf\u00e4higkeit</li> <li>Effiziente Prozesse und Ressourcennutzung</li> <li>Nachhaltiges Wirtschaften</li> <li> <p>Starke Marktposition und Wettbewerbsf\u00e4higkeit</p> </li> <li> <p>Gemeinsame Sprache und \"Landkarte\"</p> </li> <li>Wissen was passiert (wer macht, was, wann, ... ?)</li> <li>Zusammenh\u00e4nge / Abh\u00e4ngigkeiten verstehen</li> <li>Ausrichtung der IT an das Business (Alignment)</li> <li>Know-How Transfer (Verlust von Wissen vermeiden)</li> <li>Regeln und Weisungen abbilden und durchsetzten</li> <li>Schulung und Einf\u00fchrung von Mitarbeitern</li> <li>\u00dcbertragbarkeit, Business Process Outsourcing</li> <li>Weitere: Best Practices, Personalbedarf, Schnittstellen, Zertifikate</li> </ul>"},{"location":"2%20Year/M320%20-%20OOP/M320%20-%20General%20-%20OOP/","title":"M320   General   OOP","text":""},{"location":"2%20Year/M320%20-%20OOP/M320%20-%20General%20-%20OOP/#course-syllabus","title":"\ud83d\udea9 |  Course Syllabus","text":"<ul> <li>M320 | TBZ | Gitlab</li> </ul>"},{"location":"2%20Year/M320%20-%20OOP/M320%20-%20General%20-%20OOP/#learning-objectives","title":"\ud83d\udca1 |  Learning Objectives","text":"<ol> <li>Analyzes application problems to create object-oriented programs.</li> <li>Models and documents object-oriented programs.</li> <li>Implements object-oriented design.</li> <li>Verifies implementation for correctness and quality.</li> </ol>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/","title":"OOP   Cheatsheet","text":"<p>This cheat sheet provides code examples for essential concepts in Java's object oriented programming. </p>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/#class-definitions","title":"Class Definitions","text":"<ul> <li>Blueprint for creating objects</li> <li>Contains fields (data) and methods (behavior)</li> <li>Used to create instances (objects) of the class</li> </ul> <pre><code>class ClassName {\n    // Fields/Instance Variables\n    dataType fieldName;\n\n    // Constructor\n    ClassName(parameters) {\n        // Constructor body\n    }\n\n    // Methods\n    returnType methodName(parameters) {\n        // Method body\n    }\n}\n</code></pre>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/#creating-objects","title":"Creating Objects","text":"<ul> <li>Instantiates a new object of a class</li> <li>Allocates memory and initializes the object</li> <li>Returns a reference to the newly created object</li> </ul> <pre><code>ClassName objectName = new ClassName();\n</code></pre>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/#accessing","title":"Accessing","text":"<ul> <li>Allows access to fields and methods of an object</li> <li>Dot notation: objectName.fieldName or objectName.methodName()</li> <li>Accessed based on the reference type (compile-time type)</li> </ul> <pre><code>objectName.fieldName; // Accessing instance variable\nobjectName.methodName(parameters); // Invoking a method\n</code></pre>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/#inheritance","title":"Inheritance","text":"<ul> <li>Enables a class to inherit properties and methods from a parent class</li> <li>Supports code reuse and hierarchical relationships</li> <li> <p>Allows overriding and extending functionality</p> </li> <li> <p>Extending a superclass to inherit its properties and methods, promoting code reuse and establishing a hierarchical relationship, enabling subclasses to specialize and override inherited behavior while maintaining the ability to be used as instances of their superclass. Example for dog you can create a parentclass named animal and define attributes that is general for any animal.</p> </li> </ul> <pre><code>class ChildClass extends ParentClass {\n    // Additional members and methods\n}\n</code></pre>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/#polymorphism","title":"Polymorphism","text":"<ul> <li>Ability of an object to take different forms (classes)</li> <li>Enables methods to be overridden in subclasses</li> <li> <p>Supports dynamic method dispatch at runtime</p> </li> <li> <p>Utilizing polymorphic references to create code that is more flexible and modular, allowing objects of different subclasses to be treated as instances of their common superclass, facilitating dynamic method dispatch and enabling runtime determination of the specific behavior of an object.</p> </li> </ul> <pre><code>// Method overriding\n@Override\nreturnType methodName(parameters) {\n    // Method body\n}\n</code></pre>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/#encapsulation","title":"Encapsulation","text":"<ul> <li>Bundles data and methods into a single unit (class)</li> <li>Access modifiers control the visibility and accessibility of members</li> <li>Protects data from unwanted external access</li> </ul> <pre><code>private dataType fieldName; // Accessible only within the class\npublic dataType fieldName; // Accessible from anywhere\nprotected dataType fieldName; // Accessible within the class and its subclasses\n</code></pre>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/#abstraction","title":"Abstraction","text":"<ul> <li>Hides unnecessary details and complexity</li> <li>Provides a simplified view of objects and classes</li> <li> <p>Abstract classes and interfaces are used to achieve abstraction</p> </li> <li> <p>Creating an abstract class or interface to define a common set of methods that multiple subclasses must implement, allowing for code reuse and providing a simplified view of the objects.</p> </li> </ul> <pre><code>abstract class AbstractClass {\n    // Abstract method\n    abstract returnType methodName(parameters);\n}\n</code></pre>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/#interfaces","title":"Interfaces","text":"<ul> <li>Defines a contract of methods that a class must implement</li> <li>Allows multiple inheritance of behavior</li> <li> <p>Encourages loose coupling and code flexibility</p> </li> <li> <p>Implementing an interface to ensure that a class adheres to a specific contract of methods, enabling loose coupling, flexibility, and allowing objects of different classes to be treated interchangeably based on their shared interface.</p> </li> </ul> <pre><code>interface InterfaceName {\n    // Constant declarations\n    dataType CONSTANT_NAME = value;\n\n    // Abstract method declarations\n    returnType methodName(parameters);\n}\n\nclass ClassName implements InterfaceName {\n    // Implement interface's methods\n}\n</code></pre>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/#polymorphic-references","title":"Polymorphic References","text":"<ul> <li>Allows an object of a subclass to be referred to by a superclass reference</li> <li>Supports code flexibility and modularity</li> <li>Enables method overriding and dynamic method dispatch</li> </ul> <pre><code>ParentClass referenceName = new ChildClass();\n</code></pre>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/#static-members","title":"Static Members","text":"<ul> <li>Belongs to the class rather than instances (objects)</li> <li>Accessed using the class name</li> <li>Shared among all instances of the class</li> </ul> <pre><code>class ClassName {\n    static dataType staticFieldName;\n    static returnType staticMethodName(parameters) {\n        // Method body\n    }\n}\n\nClassName.staticFieldName; // Accessing static field\nClassName.staticMethodName(parameters); // Invoking static method\n</code></pre>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/#final-keyword","title":"Final Keyword","text":"<ul> <li>Indicates that a variable, method, or class cannot be changed or overridden</li> <li>Provides constants and immutable behavior</li> <li>Used to achieve data integrity and code safety</li> </ul> <pre><code>final dataType fieldName; // Cannot be modified after initialization\n\nfinal void methodName() {\n    // Cannot be overridden in subclasses\n}\n</code></pre>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/#exceptions","title":"Exceptions","text":"<ul> <li>Handles exceptional conditions or errors during program execution</li> <li>Protects against unexpected behavior and allows error recovery</li> </ul> <pre><code>try {\n    // Code that may throw an exception\n} catch (ExceptionType exceptionObject) {\n    // Handling the exception\n} finally {\n    // Code that always executes\n}\n</code></pre>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/#packages","title":"Packages","text":"<ul> <li>Organizes classes and interfaces into namespaces</li> <li>Facilitates code reusability and modular development</li> </ul> <pre><code>package packageName;\n\nimport packageName.ClassName;\nimport packageName.*; // Import all classes in the package\n</code></pre>"},{"location":"2%20Year/M320%20-%20OOP/OOP%20-%20Cheatsheet/#string-manipulation","title":"String Manipulation","text":"<ul> <li>Provides operations for manipulating string data</li> </ul> <pre><code>String str = \"Hello, World!\";\n\nstr.length(); // Length of the string\nstr.charAt(index); // Get character at a specific index\nstr.substring(startIndex, endIndex); // Extract substring\nstr.indexOf(substring); // Index of substring in the string\nstr.replace(oldValue, newValue); // Replace characters in the string\nstr.toLowerCase(); // Convert to lowercase\nstr.toUpperCase(); // Convert to uppercase\nstr.trim(); // Remove leading and trailing whitespace\n</code></pre>"},{"location":"2%20Year/M322%20-%20UI%2C%20UX/M322%20-%20General%20-%20User%20Interface%2C%20UI%3BUX/","title":"M322   General   User Interface, UI;UX","text":""},{"location":"2%20Year/M322%20-%20UI%2C%20UX/M322%20-%20General%20-%20User%20Interface%2C%20UI%3BUX/#course-syllabus","title":"\ud83d\udea9 |  Course Syllabus","text":"<ul> <li>M322 | TBZ | GITLAB</li> </ul>"},{"location":"2%20Year/M322%20-%20UI%2C%20UX/M322%20-%20General%20-%20User%20Interface%2C%20UI%3BUX/#learning-objectives","title":"\ud83d\udca1 |  Learning Objectives","text":"<ul> <li>What is UX and UI?</li> <li>Workflow, Smart Design</li> <li>Creating a UI/UX Design</li> </ul>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/","title":"Cloud Solution   Cheatsheet","text":"<p>Lernziele: https://gitlab.com/ch-tbz-it/Stud/m346/m346/-/blob/main/KN00/KN00.md</p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#cloud-init","title":"Cloud-init","text":"<ul> <li>Cloud-init is open-source software used to automate the configuration and initialization of virtual machines in cloud computing environments. It allows administrators to define user data instructions that automate tasks such as software installation, network configuration, and user account setup.</li> </ul> <pre><code>#cloud-config\n# Sets the hostname of the virtual machine to \"my-vm\".\nhostname: my-vm\n# Sets the fully qualified domain name (FQDN) of the virtual machine to \"my-vm.example.com\".\nfqdn: my-vm.example.com\n# Adds a new user named \"ubuntu\", adds dand authorizes SSH access with an SSH public key.\nusers:\n\u00a0 - name: ubuntu # name\n\u00a0 \u00a0 sudo: ALL=(ALL) NOPASSWD:ALL # give all sudo and no pwd req\n\u00a0 \u00a0 groups: users, admin # adds to grou\u00fc\n\u00a0 \u00a0 home: /home/ubuntu # allocate home dir\n\u00a0 \u00a0 shell: /bin/bash # allocates the shell\n\u00a0 \u00a0 ssh_authorized_keys:\n\u00a0 \u00a0 \u00a0 - ssh-rsa keykeykey aws-key\nssh_pwauth: true # enable pw auth\ndisable_root: false # disables root\n# Installs the Nginx web server and Git version control system.\npackages:\n  - nginx\n  - git\n# Creates an Nginx configuration file for the virtual host \"my-vm.example.com\".\nwrite_files:\n  - content: |\n      server {\n          listen 80;\n          server_name my-vm.example.com;\n\n          location / {\n              root /var/www/my-app;\n              index index.html;\n          }\n      }\n    path: /etc/nginx/sites-available/my-vm.conf\n    owner: root:root\n    permissions: '0644'\n# Creates a simple HTML file for the virtual host \"my-vm.example.com\".\n  - content: |\n      &lt;!DOCTYPE html&gt;\n      &lt;html&gt;\n      &lt;body&gt;\n      &lt;h1&gt;Welcome to my app!&lt;/h1&gt;\n      &lt;/body&gt;\n      &lt;/html&gt;\n    path: /var/www/my-app/index.html\n    owner: www-data:www-data\n    permissions: '0644'\n# Restarts the Nginx web server to apply the new configuration, clones a Git repository, and sets the correct permissions for the web server directory.\nruncmd:\n  - systemctl restart nginx\n  - git clone https://github.com/my-user/my-app.git /var/www/my-app\n  - chown -R www-data:www-data /var/www/my-app\n</code></pre> <p>Pro Arguments: 1.  Automation: Cloud-init enables automated provisioning and configuration of virtual machines, reducing the need for manual setup and configuration. This improves efficiency and reduces the risk of errors and inconsistencies. 2.  Flexibility: Cloud-init can be used with a variety of cloud providers, operating systems, and virtual machine images. This provides organizations with the flexibility to use their preferred cloud provider and customize their virtual machine images to meet their specific requirements. 3.  Security: Cloud-init supports several security features, such as password hashing and SSH key authentication. This helps to ensure that virtual machines are secure and protected from unauthorized access. 4.  Standardization: Cloud-init provides a standardized way of configuring virtual machines, making it easier to manage and maintain infrastructure resources. This reduces the risk of configuration drift and helps to ensure consistency across virtual machines.</p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#infrastructure-as-code","title":"Infrastructure as Code","text":"<ul> <li>Infrastructure as Code (IaC) is a practice of defining and managing infrastructure resources such as virtual machines, networks, and storage using machine-readable configuration files. It allows for automated provisioning, deployment, and scaling of infrastructure resources, enabling organizations to treat their infrastructure as software. This approach increases efficiency, reduces errors, and facilitates collaboration among teams.</li> <li>AWS CloudFormation: A service that allows users to define and manage infrastructure resources in AWS using YAML or JSON templates.</li> <li>Azure Resource Manager: A service that enables users to define and manage infrastructure resources in Azure using JSON templates.</li> <li>Google Cloud Deployment Manager: A service that allows users to define and manage infrastructure resources in Google Cloud Platform using YAML or Python templates.</li> <li>HashiCorp Terraform: A tool that provides a declarative way to define and manage infrastructure resources across multiple cloud providers and on-premises environments.</li> <li>Ansible: An open-source automation tool </li> </ul>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#virtualization","title":"Virtualization","text":"<ul> <li>Virtualization is the process of creating a virtual version of a physical resource, such as a server, storage device, or network, using software. Virtualization enables multiple virtual resources to run on a single physical resource, which can improve resource utilization, increase flexibility, and reduce costs. Examples of virtualization include server virtualization, network virtualization, and storage virtualization.</li> </ul>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#hypervisor","title":"Hypervisor","text":"<ul> <li>The hypervisor is a piece of software that creates and manages virtual machines on a physical host. It abstracts the underlying physical resources and presents them as virtual resources to the guest operating systems running on the virtual machines. The hypervisor also manages the allocation of physical resources to virtual machines, ensuring that each virtual machine has access to the resources it needs to run. ![[Pasted image 20230407192414.png]]</li> </ul>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#type-1","title":"Type 1","text":"<ul> <li>Type 1 hypervisors: Also known as bare-metal hypervisors, Type 1 hypervisors run directly on the host's hardware, without the need for an underlying operating system. They provide direct access to the physical resources, such as CPU, memory, and storage, and can support multiple guest operating systems running on virtual machines. Examples of Type 1 hypervisors include VMware ESXi, Microsoft Hyper-V, and Citrix Hypervisor.</li> </ul>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#type-2","title":"Type 2","text":"<ul> <li>Type 2 hypervisors: Also known as hosted hypervisors, Type 2 hypervisors run on top of an existing operating system, such as Windows, Linux, or macOS. They rely on the underlying operating system to manage access to the physical resources and provide virtualization capabilities to guest operating systems running on virtual machines. Examples of Type 2 hypervisors include Oracle VirtualBox, VMware Workstation, and Parallels Desktop.</li> </ul>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#hyperscalers","title":"Hyperscalers","text":"<ul> <li>A hyperscaler is a cloud service provider that operates at a massive scale, providing cloud-based services to millions of users worldwide. Examples include Amazon Web Services, Microsoft Azure, Google Cloud Platform, and IBM Cloud. They offer massive amounts of compute, storage, and network resources at low costs, thanks to economies of scale and efficient resource utilization.</li> </ul>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#usage-models","title":"Usage models","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#public-vs-privat-cloud","title":"Public vs. Privat Cloud","text":"<ol> <li> <p>Private Cloud: A private cloud is a cloud computing environment that is owned, operated, and dedicated to a single organization. Private clouds can be located on-premises or hosted by a third-party service provider. They are typically used by organizations that require more control over their computing resources, greater customization, and higher levels of security and privacy. Private clouds are not shared with other organizations, and access is restricted to authorized personnel.</p> </li> <li> <p>Public Cloud: A public cloud is a cloud computing environment that is owned and operated by a third-party cloud provider and is available to the general public or a large industry group. Public clouds are typically used by organizations that require high scalability, rapid deployment, and lower costs. Public clouds are shared with other organizations and can be accessed over the internet. Access is usually provided through a web-based interface or API, and pricing is typically based on usage.</p> </li> <li> <p>Hyprid Cloud: A hybrid cloud is a cloud computing environment that combines both public and private cloud resources. It allows companies to leverage the benefits of both cloud models, such as the scalability and cost-effectiveness of the public cloud, while also maintaining control over sensitive data and applications in a private cloud. This enables businesses to optimize their IT infrastructure and resources to meet their specific needs and requirements.</p> </li> </ol>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#service-models","title":"Service models","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#cloud-system-layers","title":"Cloud-System Layers","text":"<ul> <li>![[Infrastructure as a Service (IaaS)]]</li> <li>![[Platform as a Service (PaaS)]]</li> <li>![[Function as a Service (FaaS)]]</li> <li>![[Software as a Service (SaaS)]]</li> </ul>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#cloud-migrations-models","title":"(Cloud-) Migrations models","text":"<p>Migration models are strategies for moving an organization's data, applications, and infrastructure from one environment to another. There are several migration models, including lift and shift, re-platforming, and refactoring.</p> <ol> <li> <p>Lift and shift: This model involves moving an application or system from one environment to another without making any significant changes to its architecture or functionality. This means the application or system will function in the same way as before but on a different infrastructure. It is often used when the primary objective is to migrate quickly and with minimal disruption.</p> </li> <li> <p>Re-platforming: This model involves migrating an application or system to a new environment with some changes made to its architecture or functionality. The aim of re-platforming is to take advantage of the features and benefits of the new environment. For example, migrating a system from on-premise to the cloud could involve changes to its architecture to make it more cloud-friendly.</p> </li> <li> <p>Refactoring: This model involves migrating an application or system to a new environment and making significant changes to its architecture and functionality to optimize it for the new environment. This approach often involves rewriting or redesigning parts of the application or system to take full advantage of the new environment's features and benefits. For example, migrating a monolithic application to a microservices architecture could involve significant changes to the application's design and functionality.</p> </li> </ol>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#storage-models","title":"Storage models","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#storage-service","title":"Storage service","text":"<ol> <li> <p>Object Storage: Object storage is a type of storage architecture that manages data as objects, each with its own unique identifier, metadata, and data. Object storage is ideal for storing large amounts of unstructured data such as images, videos, audio files, and documents. Object storage is highly scalable and designed to be accessed over the network. (Amazon S3)</p> </li> <li> <p>Block Storage: Block storage is a type of storage architecture that stores data in fixed-sized blocks. Each block has its own address and can be accessed independently. Block storage is commonly used in enterprise applications such as databases and virtual machines. Block storage provides high performance and low latency, making it ideal for applications that require fast access to data. (Amazon Elastic Block Store)</p> </li> <li> <p>File Storage: File storage is a type of storage architecture that stores data as files in a hierarchical directory structure. File storage is commonly used in network-attached storage (NAS) systems and is ideal for storing data that needs to be shared across multiple users or applications. File storage provides a high level of compatibility with existing applications and operating systems. (Amazon Elastic File System)</p> </li> <li> <p>Tape Storage: Tape storage is a type of storage architecture that stores data on magnetic tape cartridges. Tape storage is commonly used for long-term data archiving and backup purposes, as tape cartridges can hold large amounts of data and are relatively inexpensive. Tape storage is less expensive than disk-based storage but slower to access, making it less suitable for applications that require fast data access. (AWS Storage Gateway-Virtual Tape Library)</p> </li> </ol>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#storage-type","title":"Storage type","text":"<p>Hot, cold, and warm storage are terms used to describe different storage tiers based on the frequency and speed of access to data, as well as the cost of storage.</p> <ol> <li> <p>Hot storage: refers to the highest performance and fastest access storage tier, where data is frequently accessed and needs to be available at all times. It is typically the most expensive storage tier, and is often used for critical workloads that require low latency and high throughput. Examples of hot storage include solid-state drives (SSDs) and high-performance block storage.</p> </li> <li> <p>Cold storage:, on the other hand, is a low-cost storage tier used for data that is accessed infrequently or is rarely modified. It is suitable for data that can be stored offline or on tape, and is ideal for long-term archival purposes. Examples of cold storage include Amazon S3 Glacier and Amazon S3 Glacier Deep Archive.</p> </li> <li> <p>Warm storage: is a middle ground between hot and cold storage, providing faster access than cold storage but at a lower cost than hot storage. It is suitable for data that is accessed periodically but not frequently, and is often used for backup and disaster recovery purposes. Examples of warm storage include Amazon S3 Standard-Infrequent Access (S3 Standard-IA) and Amazon EBS Throughput Optimized HDD (st1).</p> </li> </ol>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/Cloud%20Solution%20-%20Cheatsheet/#persistent-and-volatile-storage","title":"Persistent and volatile storage","text":"<p>Persistent and volatile storage are two types of storage used in computing, particularly in virtual instances.</p> <ul> <li> <p>Persistent storage refers to non-volatile storage, which means that data is stored even when power is removed. This type of storage is used for long-term data storage and is typically slower than volatile storage. Examples of persistent storage include hard disk drives (HDDs) and solid-state drives (SSDs).</p> </li> <li> <p>Volatile storage, on the other hand, refers to storage that is lost when power is removed. This type of storage is used for short-term data storage and is typically faster than persistent storage. Examples of volatile storage include random-access memory (RAM) and cache memory.</p> </li> </ul> <p>In the context of virtual instances, persistent storage is used for data that needs to be stored long-term, such as databases, files, and operating system images. Volatile storage, such as RAM, is used for running applications and storing data temporarily while the virtual instance is powered on.</p> <p>It is important to understand the difference between persistent and volatile storage in virtual instances, as it can affect the performance and availability of applications and data. For example, if a virtual instance relies solely on volatile storage, any data stored in RAM will be lost if the instance is shut down or restarted. Therefore, it is often necessary to use persistent storage to ensure that data is retained even if the instance is powered off or terminated.</p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/M346%20-%20General%20-%20Cloud%20Solutions/","title":"M346   General   Cloud Solutions","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/M346%20-%20General%20-%20Cloud%20Solutions/#course-syllabus","title":"\ud83d\udea9 |  Course Syllabus","text":"<ul> <li>M346 | TBZ | GITLAB</li> </ul>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/M346%20-%20General%20-%20Cloud%20Solutions/#learning-objectives","title":"\ud83d\udca1 |  Learning Objectives","text":"<ul> <li>Virtualization</li> <li>Cloud init</li> <li>Service Model</li> <li>Migration Model</li> <li>Scaling in AWS</li> <li>Storage Models</li> </ul>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/M346%20-%20General%20-%20Cloud%20Solutions/#notes-exercises","title":"\ud83d\udcd3 | Notes &amp; Exercises","text":"<ul> <li>KN02</li> <li>KN03</li> <li>KN04</li> <li>KN05</li> <li>KN06</li> <li>KN07</li> <li>KN08</li> <li>Cloud Solution - Cheatsheet</li> </ul>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN01/KN01/","title":"KN01","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN01/KN01/#b","title":"B","text":"<p>ui</p> <p>multipass launch/jammy/find/list </p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN01/KN01/#c","title":"C","text":"<p>cpu change delete instance instance instance start stop shell </p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN01/KN01/#d","title":"D","text":"<p>db.php index.html info.php </p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN02/KN02/","title":"KN02","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN02/KN02/#a","title":"A","text":"<p>Cloud-Init Dateien verstehen</p> <pre><code>#cloud-config\nusers: # This section defines the users that will be created\n\u00a0 - name: ubuntu # The name of the user to be created\n\u00a0 \u00a0 sudo: ALL=(ALL) NOPASSWD:ALL # Allows the user to run any command as any user without a password prompt\n\u00a0 \u00a0 groups: users, admin # Assigns the user to the users and admin groups\n\u00a0 \u00a0 home: /home/ubuntu # Specifies the home directory for the user\n\u00a0 \u00a0 shell: /bin/bash # Specifies the default shell for the user\n\u00a0 \u00a0 lock_passwd: false # Allows the user to log in with a password\n\u00a0 \u00a0 plain_text_passwd: \"password\" # Sets the user's password to \"password\"\n\n\nssh_pwauth: true # Enables password authentication for SSH logins\ndisable_root: false # Allows the root user to log in\npackages: # This section specifies which packages should be installed\n\u00a0 - apache2 # Installs the Apache2 web server\n\u00a0 - curl # Installs the command-line tool for transferring data\n\u00a0 - wget # Installs the command-line tool for retrieving files from the web\n\u00a0 - php # Installs the PHP scripting language\n\u00a0 - libapache2-mod-php # Installs the Apache2 module for PHP\n\u00a0 - php-mysqli # Installs the PHP MySQLi extension\n</code></pre>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN02/KN02/#b","title":"B","text":"<p>Multipass Web Find</p> <p></p> <p>Apache Service</p> <p> </p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN02/KN02/#c","title":"C","text":"<p><code>cloudinit-adminer.yaml</code></p> <pre><code>#cloud-config\nusers:\n\u00a0 - name: ubuntu\n\u00a0 \u00a0 sudo: ALL=(ALL) NOPASSWD:ALL\n\u00a0 \u00a0 groups: users, admin\n\u00a0 \u00a0 home: /home/ubuntu\n\u00a0 \u00a0 shell: /bin/bash\n\u00a0 \u00a0 lock_passwd: false\n\u00a0 \u00a0 plain_text_passwd: \"password\"\nssh_pwauth: true\ndisable_root: false\npackages:\n\u00a0 - apache2\n\u00a0 - curl\n\u00a0 - wget\n\u00a0 - php\n\u00a0 - libapache2-mod-php\n\u00a0 - php-mysqli\n\u00a0 - adminer\nruncmd:\n\u00a0 - sudo a2enconf adminer\n\u00a0 - sudo systemctl restart apache2\nwrite_files:\n\u00a0 - path: /var/www/html/info.php\n\u00a0 \u00a0 content: |\n\u00a0 \u00a0 \u00a0 &lt;?php\n\u00a0 \u00a0 \u00a0 // Show all information, defaults to INFO_ALL\n\u00a0 \u00a0 \u00a0 phpinfo();\n\u00a0 \u00a0 \u00a0 ?&gt;\n\u00a0 \u00a0 permissions: \"0644\"\n\u00a0 - path: /var/www/html/db.php\n\u00a0 \u00a0 content: |\n\u00a0 \u00a0 \u00a0 &lt;?php\n\u00a0 \u00a0 \u00a0 //database\n\u00a0 \u00a0 \u00a0 $servername = \"127.0.0.1\";\n\u00a0 \u00a0 \u00a0 $username = \"admin\";\n\u00a0 \u00a0 \u00a0 $password = \"password\";\n\u00a0 \u00a0 \u00a0 $dbname = \"mysql\";\n\u00a0 \u00a0 \u00a0 // Create connection\n\u00a0 \u00a0 \u00a0 $conn = new mysqli($servername, $username, $password, $dbname);\n\u00a0 \u00a0 \u00a0 // Check connection\n\u00a0 \u00a0 \u00a0 if ($conn-&gt;connect_error) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 die(\"Connection failed: \" . $conn-&gt;connect_error);\n\u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 $sql = \"select Host, User from mysql.user;\";\n\u00a0 \u00a0 \u00a0 $result = $conn-&gt;query($sql);\n\u00a0 \u00a0 \u00a0 while($row = $result-&gt;fetch_assoc()){\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo($row[\"Host\"] . \" / \" . $row[\"User\"] . \"&lt;br /&gt;\");\n\u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 //var_dump($result);\n\u00a0 \u00a0 \u00a0 ?&gt;\n\u00a0 \u00a0 permissions: \"0644\"\n</code></pre> <p>db.php This file doesn't because it can't connect to the other database that is hosted in another vm, due the networking/routing.</p> <p>info.php</p> <p> adminer</p> <p></p> <p><code>cloud-init-db.yaml</code></p> <pre><code>#cloud-config\nusers:\n  - name: ubuntu\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: users, admin\n    home: /home/ubuntu\n    shell: /bin/bash\n    lock_passwd: false\n    plain_text_passwd: \"password\"\n\nssh_pwauth: true\ndisable_root: false\npackages:\n  - mariadb-server\nruncmd:\n  - sudo mysql -sfu root -e \"GRANT ALL ON *.* TO 'admin'@'%' IDENTIFIED BY'password' WITH GRANT OPTION;\"\n</code></pre>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN03/KN03/","title":"KN03","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN03/KN03/#amazon-ec2","title":"Amazon EC2","text":"<p>Link http://52.201.7.116/ Screenshot of website EC2 Instance </p> <p>Security Group </p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN03/KN03/#amazon-s3","title":"Amazon S3","text":"<p>URL: http://bucketlucketmlucket.s3-website.eu-central-1.amazonaws.com/</p> <p>Buckets list </p> <p>Website Screenshot </p> <p>Bucket files </p> <p>Static website </p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN03/KN03/#access-with-password","title":"Access with Password","text":"<pre><code>#cloud-config\nusers:\n  - name: ubuntu\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: users, admin\n    home: /home/ubuntu\n    shell: /bin/bash\n    lock_passwd: true\n    plain_text_passwd: 'password' \n  - name: tbz\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: users, admin\n    home: /home/tbz\n    shell: /bin/bash\n    lock_passwd: false\n    plain_text_passwd: 'password'\nssh_pwauth: true\ndisable_root: false\n</code></pre> <p>Password Login TBZ User </p> <p>Password Login Ubuntu User  Doesn't work because its locked</p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN03/KN03/#access-with-ssh-key","title":"Access with SSH Key","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN03/KN03/#access-with-ssh-key-and-cloudinit","title":"Access with SSH Key and Cloudinit","text":"<p>SSH Cloudinit <pre><code>#cloud-config\nusers:\n\u00a0 - name: ubuntu\n\u00a0 \u00a0 sudo: ALL=(ALL) NOPASSWD:ALL\n\u00a0 \u00a0 groups: users, admin\n\u00a0 \u00a0 home: /home/ubuntu\n\u00a0 \u00a0 shell: /bin/bash\n\u00a0 \u00a0 ssh_authorized_keys:\n\u00a0 \u00a0 \u00a0 - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCB4/e2KkopLrTo+KfbeuKKhuTEpsQ+sgPk\npAfQUQP2Eow/aqjhHN6tkQwAj4JgTEZ3z7A33Zi0CSEUHiuki0SJWP6ivXoocsNE\nfzfXsVLuEt+stO+I7bpT7cl8mF+hC9Dq4E0j/JVvmjpoPL+FmzNv3gFUFO29iZfx\n9qBJpB8FwYCvcWMDAn3zTLhYVd4qapa3nsf8Eky6RWyMd49vOOUG/IdQY37/wt/y\nA04yE4sPZBIdilMH6tZ+FCOUY6U7fwYFKUIHqqnyxJkPEXB7qDttcmWLrk1UzxH0\nnonSNjIEg0T8vFzUVKEMhCsVlQOnGOBwBmIABFpEXrut+bcCt6FF aws-key\nssh_pwauth: false\ndisable_root: false\n</code></pre></p> <p>Login </p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN04/KN04/","title":"KN04","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN04/KN04/#a","title":"A","text":"<p>Instance Adminer Instance DB </p> <p>Database Cloudinit <pre><code>#cloud-config\nusers:\n\u00a0 - name: ubuntu\n\u00a0 \u00a0 sudo: ALL=(ALL) NOPASSWD:ALL\n\u00a0 \u00a0 groups: users, admin\n\u00a0 \u00a0 home: /home/ubuntu\n\u00a0 \u00a0 shell: /bin/bash\n\u00a0 \u00a0 lock_passwd: false\n\u00a0 \u00a0 plain_text_passwd: \"password\"\nssh_pwauth: true\ndisable_root: false\npackages:\n\u00a0 - mariadb-server\nruncmd:\n\u00a0 - sudo mysql -sfu root -e \"GRANT ALL ON *.* TO 'admin'@'%' IDENTIFIED BY'password' WITH GRANT OPTION;\"\n\u00a0 - sudo sed -i 's/127.0.0.1/0.0.0.0/g' /etc/mysql/mariadb.conf.d/50-server.cnf\n\u00a0 - sudo systemctl restart mariadb.service\n</code></pre> Adminer Cloudinit </p> <p>Instance List </p> <p>Adminer index.html info.php db.php </p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN04/KN04/#b","title":"B","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN04/KN04/#a_1","title":"a)","text":"<p>S3 steht f\u00fcr Simple Storage Service\" S3 ist ein Objektspeichermodell.</p> <p>Screenshot of instance and volumes List of all volumes After deletion  Diese Nachricht informiert den Benutzer dar\u00fcber, dass er eine bestimmte EC2-Instanz (i-07bcd686bf87541c6) beenden m\u00f6chte. Bevor er dies tut, muss er sicherstellen, dass er die damit verbundenen Ressourcen bereinigt. Andernfalls k\u00f6nnen diese Ressourcen auch nach dem Beenden der Instanz Kosten verursachen. </p> <p>Warum existiert das Volume noch Das Volume existiert noch, da es ein externes Volumen ist.  (Die andere Volumen (die mit 8gb) geh\u00f6ren zu den anderem vms) </p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN05/KN05/","title":"KN05","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN05/KN05/#a","title":"A)","text":"<p>Subnet Security Groups Instances Network Interfaces </p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN05/KN05/#b","title":"B)","text":"<p>index.html</p> <p></p> <p>info.php</p> <p></p> <p>db.php</p> <p></p> <p>Subnet </p> <p>Elastic IP </p> <p>Security Groups </p> <p>Network Interfaces </p> <p>Instances </p> <p></p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN06/KN06/","title":"KN06","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN06/KN06/#vertical","title":"Vertical","text":"<p>db</p> <p></p> <p>web</p> <p></p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN06/KN06/#horizontal","title":"horizontal","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN06/KN06/#auto-scaling","title":"Auto Scaling","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN07/KN07/","title":"KN07","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN07/KN07/#a-kostenrechnung-erstellen","title":"A) Kostenrechnung erstellen","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN07/KN07/#1-rehosting","title":"1) Rehosting","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN07/KN07/#azure","title":"Azure","text":"<ul> <li>Web Server: I choose for the web server the VM Type A1 v2 with 1 Core, 2 GB Ram and 10 GB storage. Azure does not provide a VM Type with 1 Core, 2 GB Ram and 20 GB Storage. A web server general doesn't need a lot of storage so I don't see any problems.</li> <li>DB Server: I choose for the db server the VM Type D2lds V5 with 2 Cores, 4GB 75 GB storage and an extra 32 GB Disk. Azure doesn't provide a VM Type like the exact requirements. But because we need to store a lot of data it makes more sense here to buy an extra disk so we have 108GB storage.</li> <li>1 Backup: I have one Azure Backup product that backups a VM with 10 GB (for the web server) with the backup policy configs: 7days, 4W, 3M, 0Y.</li> <li>2 Backup: I have a second Azure Backup product that backups a VM with 100GB (for db server) with the same backup policy as the 1 Backup.</li> <li>Load Balancer: I also added a load Balancer. It's free in Azure.</li> </ul>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN07/KN07/#aws","title":"AWS","text":"<ul> <li>Web Server: I choose a EC2 Server type t3.small with 1 core, 2 GB Ram and added 20GB EBS Storage.</li> <li>DB Server: I choose a EC2 Server type t3a.medium with 2 cores, 4GB Ram and 100 GB EBS Storage.</li> <li>1 Backup: I choose a AWS Backup product that backups my 20 GB (web server) EBS Storage, backup policy same as azure.</li> <li>2 Backup: I choose a AWS Backup product that backups my 100 GB (db server) EBS storage, backup policy same as azure.</li> <li>Load Balancer: I have 1 Application Load Balancer with the Load Balancer Capacity Units (LCUs) calculation of 1GB/hour that enables 3'000 active connections. It costs.</li> </ul> <p>As you can see Amazon takes (with upfront and monthly costs) 1202,68 USD per year. Azure costs 1.537,8 USD per year.  When comparing the costs between Amazon and Azure, it is worth noting that even though Amazon may seem less expensive initially, Azure offers better value for your investment. Our calculations show that despite Azure costing $335.12 more annually than Amazon, the return on investment with Azure services and features is significant. Besides, Azure's pricing model ensures you only pay for what you use, making it ideal for businesses of any size with its scalability and cost-effectiveness.</p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN07/KN07/#2-replatforming","title":"2) Replatforming","text":"<ul> <li> <p>For the web server, we can use the \"Performance-M\" dyno plan. 50$/month</p> </li> <li> <p>For the database server, you can use the \"Standard 0\" plan. It only has 64GB storage but we can scale it later on (its a lot cheaper). 50$/month.</p> </li> <li> <p>For the load balancer, you can use the Heroku add-on called \"heroku-load-balancer\" which costs $50 per month (server cost).</p> </li> <li> <p>For the backup storage, you can use the Heroku add-on called \"Heroku Postgres Backups,\" which costs $10 per month.</p> </li> </ul> <p>In total, the estimated cost for using Heroku with the updated specifications would be $260 per month.</p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN07/KN07/#3-repurchasing","title":"3) Repurchasing","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN07/KN07/#zoho","title":"Zoho","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN07/KN07/#saleforce","title":"Saleforce","text":"<ul> <li>I would pick ZOHO CMS Enterprise Edition because its a lot cheaper (only 40$/user/month) then from saleforce (150usd/user/month). ZOHO CMS also brings more features.</li> </ul>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN07/KN07/#conclusion","title":"Conclusion","text":"<ul> <li>I would pick IaaS Solution (Azure) because its cheaper then replatforming and repurchasing. It also brings more freedom because you manage the server etc. If you wan't to expand it and intergrate other services to it, IaaS would be easier and better.</li> </ul>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN08/KN08/","title":"KN08","text":""},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN08/KN08/#a-backup-script","title":"A) Backup Script","text":"<p>Web instance tag</p> <p></p> <p>DB instance tag</p> <p></p> <p>List of snapshots</p> <p></p> <p>snap-006976a37a8e607a6 Snapshot Tag</p> <p></p> <p>**List after cleanup</p> <p></p> <p>snap-006976a37a8e607a6 got removed (changes deleteon tag to 2023-05-05 before cleanup function)</p>"},{"location":"2%20Year/M346%20-%20Cloud%20Solutions/KN08/KN08/#b-cron-job","title":"B) CRON Job","text":""},{"location":"2%20Year/M347%20-%20Containers/Docker%20-%20Cheatsheet/","title":"Docker - Cheatsheet","text":""},{"location":"2%20Year/M347%20-%20Containers/Docker%20-%20Cheatsheet/#content","title":"Content","text":"<ol> <li>Container vs VM</li> <li>Docker CLI</li> <li>Dockerfile</li> <li>Docker Image</li> <li>Docker Compose</li> <li>Volumes - mount bind, volumes, tmpfs,</li> <li>Container Registry</li> </ol>"},{"location":"2%20Year/M347%20-%20Containers/Docker%20-%20Cheatsheet/#container-vs-vm","title":"Container vs VM","text":"<p>What are containers? Containers are a type of virtualization technology that allows applications and their dependencies to be packaged in an isolated and portable package. Containers are a type of \"ship\" that abstracts applications from the underlying infrastructure and allows them to run in a unified environment, regardless of the platform on which they run. Containers enable developers to quickly build, test, and deploy applications without having to worry about the specific details of the underlying infrastructure.</p> <p>What are VMs? VMs stands for \"Virtual Machines\". VMs are a type of virtualization technology that allows multiple virtual operating systems to run on a single physical machine. Each virtual machine runs as a separate and isolated environment, with its own virtualized hardware, including CPU, memory, storage, and network interfaces. VMs are created by software called a hypervisor or virtual machine monitor (VMM) that creates a layer of abstraction between the physical hardware and the virtual operating systems. This layer of abstraction enables multiple operating systems to share a single physical server, allowing for greater efficiency, flexibility, and scalability in deploying and managing IT resources.</p> <p>The difference Image from section.io</p>"},{"location":"2%20Year/M347%20-%20Containers/Docker%20-%20Cheatsheet/#docker-cli","title":"Docker CLI","text":"<ul> <li> <p>Docker CLI (Command Line Interface) is a command-line tool used to interact with Docker and manage Docker containers, images, networks, and other Docker components from a terminal or command prompt.</p> </li> <li> <p>Build an image: <code>docker build -t myimage:latest .</code></p> </li> <li>Run a container: <code>docker run -p 80:80 nginx</code></li> <li>Stop a container: <code>docker stop mycontainer</code></li> <li>List all images: <code>docker images -a</code></li> <li>Pull an image: <code>docker pull nginx:latest</code></li> <li>Push an image: <code>docker push myname/myimage:latest</code></li> <li>Create volume: <code>docker volume create myvolume</code></li> <li>Remove an volume: <code>docker volume rm myvolume</code></li> <li>Execute command in container: <code>docker exec mycontainer ls</code></li> <li>List all running container: <code>docker ps</code></li> <li>Remove container: <code>docker rm &lt;container-id&gt;</code></li> <li>Tag an image: <code>docker tag myimage myname/myimage:v1.0.0</code></li> <li>Removes a Docker image from the local machine: <code>docker rmi</code></li> </ul>"},{"location":"2%20Year/M347%20-%20Containers/Docker%20-%20Cheatsheet/#dockerfile","title":"Dockerfile","text":"<ul> <li>A Dockerfile is a text file that contains a set of instructions for building a Docker image, which can be used to create and run Docker containers.</li> </ul> <pre><code>#~ mynodeapp.dockerfile ~#\nFROM node:14 # specify the base image from this container\n\nWORKDIR /app # sets the container working dir to /app\n\nCOPY package*.json ./ # copy (in regex) file with package*.json to con. dir\n\nRUN npm install # command to install all npm packages\n\nCOPY . . # copy all files from the current computer dir to the container dir\n\nEXPOSE 3000 # exposes the port 3000 public so you can reach it \n\nCMD [ \"npm\", \"start\" ] # executes an cmd command \n</code></pre> <p>Build image: <pre><code>docker build -t mynodeapp -f mynodeapp.dockerfile .\n</code></pre> - -t sets the tag/name - -f specify dockerfile name - . the context where it should build (dot means current dir)</p> <p>Run container: <pre><code>docker run -p 3000:3000 mynodeapp\n</code></pre> - -p open ports (container:host)</p>"},{"location":"2%20Year/M347%20-%20Containers/Docker%20-%20Cheatsheet/#docker-image","title":"Docker Image","text":"<ul> <li>Docker images are the building blocks of Docker containers. An image is a snapshot of an application and its dependencies at a specific point in time build in dockerfile. Like a ISO.</li> <li>Docker images are created using a Dockerfile, which is a text file that contains the instructions needed to build the image. Once an image is built, it can be stored in a registry, such as Docker Hub, or on a local machine.</li> </ul> <p>Build image: <pre><code>docker build -t mynodeapp -f mynodeapp.dockerfile .\n</code></pre> - -t sets the tag/name - -f specify dockerfile name - . the context where it should build (dot means current dir)</p> <p>Run container: <pre><code>docker run -p 3000:3000 mynodeapp\n</code></pre> - -p open ports (container:host)</p> <p> https://www.docker.com/blog/containerized-python-development-part-1/</p>"},{"location":"2%20Year/M347%20-%20Containers/Docker%20-%20Cheatsheet/#docker-compose","title":"Docker Compose","text":"<ul> <li>Docker Compose is a tool for defining and running multi-container Docker applications. It allows you to define your application's services, networks, and volumes in a single YAML file, making it easy to spin up and tear down complex multi-container environments with a single command.</li> </ul> <pre><code>version: '3' # docker compose version\n\nservices: # creates services\n  frontend: # frontend service\n    image: node:14-alpine # specify image\n    command: npm run dev # shell command\n    volumes:\n      - ./frontend:/app # imports /frontend to /app in container\n    ports:\n      - 3000:3000 # exposes and open port 3000 to host\n    depends_on: # depends which service attribute \n      - backend\n  backend: # backend service\n    image: node:14-alpine # specify image\n    command: npm run start # shell command\n    volumes:\n      - ./backend:/app # binds /backend to :/app in container\n      - user_data:/app/data # binds userdata to container\n    depends_on: # depends which service attribute\n      - database\n  database: # database service\n    image: mysql:5.7 # specify image\n    environment: # set senviroment variable\n      - MYSQL_ROOT_PASSWORD=password\n      - MYSQL_DATABASE=myapp\n      - MYSQL_USER=myuser\n      - MYSQL_PASSWORD=mypassword\n    volumes:\n      - db_data:/var/lib/mysql # binds volume\n\nvolumes:\n  db_data: # volume for database data\n  user_data: # volume for user data\n</code></pre>"},{"location":"2%20Year/M347%20-%20Containers/Docker%20-%20Cheatsheet/#docker-volumes","title":"Docker volumes","text":"<ul> <li>Mount bind volumes are useful for sharing data between the host machine and the container.</li> <li>Volumes are useful for persisting data across container restarts and for sharing data between multiple containers.</li> <li> <p>tmpfs volumes are useful for storing temporary data that doesn't need to be persisted.</p> </li> <li> <p>Mount Bind: A mount bind volume is a way to mount a specific directory on the host machine into a container. It allows a container to access and modify files on the host machine. To create a mount bind volume, use the <code>-v</code> or <code>--mount</code> flag with the <code>type=bind</code> option, followed by the path to the host directory and the path to the container directory. For example:</p> </li> </ul> <pre><code>docker run -v /host/directory:/container/directory my-image\n</code></pre> <ol> <li>Volumes: A volume is a persistent data storage mechanism that is managed by Docker. It allows a container to store and retrieve data even if the container is stopped or deleted. To create a volume, use the <code>docker volume create</code> command, followed by the volume name. To use a volume in a container, use the <code>-v</code> or <code>--mount</code> flag with the <code>type=volume</code> option, followed by the volume name and the path to the container directory. For example:</li> </ol> <pre><code>docker volume create my-volume \ndocker run -v my-volume:/container/directory my-image\n</code></pre> <ol> <li>tmpfs: A tmpfs volume is a memory-backed volume that is not persisted to disk. It allows a container to store and retrieve data in memory, which can be useful for temporary files or other data that doesn't need to be persisted. To create a tmpfs volume, use the <code>-v</code> or <code>--mount</code> flag with the <code>type=tmpfs</code> option, followed by the path to the container directory. For example:</li> </ol> <pre><code>docker run -v /container/directory --mount type=tmpfs my-image\n</code></pre> <p>Note that these volume types can also be used in a Docker Compose file, and can be managed using the <code>docker volume</code> command.</p>"},{"location":"2%20Year/M347%20-%20Containers/Docker%20-%20Cheatsheet/#container-registry","title":"Container Registry","text":"<ul> <li>A container registry is like github, where you store code and other stuff. In container registries you store container images. You can easily manage, upload, download, update your container images.   https://blogs.sap.com/2022/11/01/use-private-registry-for-containerize-a-cap-application-part-1/</li> </ul>"},{"location":"2%20Year/M347%20-%20Containers/Docker%20-%20Cheatsheet/#public-registry","title":"Public Registry","text":"<p>A public registry is a Docker registry that is publicly accessible and allows anyone to push and pull Docker images from it.</p> <ol> <li>Docker Hub</li> <li>Quay.io</li> <li>Google Container Registry</li> <li>Amazon Elastic Container Registry</li> <li>GitLab Container Registry</li> </ol>"},{"location":"2%20Year/M347%20-%20Containers/Docker%20-%20Cheatsheet/#privat-registry","title":"Privat Registry","text":"<p>A private registry is a Docker registry that is not publicly accessible and requires authentication to push and pull Docker images from it. Private registries are typically used for storing sensitive or proprietary Docker images that are not intended for public consumption.</p> <ol> <li>Docker Trusted Registry (DTR)</li> <li>Harbor</li> <li>Amazon Elastic Container Registry Private</li> <li>Google Container Registry Private</li> <li>Azure Container Registry</li> </ol>"},{"location":"2%20Year/M347%20-%20Containers/Docker%20Registry%20and%20Publish/","title":"Docker Registry and Publish","text":"<p>I choose the Docker Hub repository 1. Build image: <code>docker build -t &lt;name&gt; -f &lt;filename&gt; .</code> 2. Tag the image: <code>docker tag &lt;name&gt; &lt;username&gt;/&lt;name&gt;:&lt;tag&gt;</code> 3. Login: <code>docker login</code> 4. Push image: <code>docker push &lt;username&gt;/&lt;name&gt;:&lt;tag&gt;</code></p>"},{"location":"2%20Year/M347%20-%20Containers/M347%20-%20General%20-%20Containers/","title":"M347   General   Containers","text":""},{"location":"2%20Year/M347%20-%20Containers/M347%20-%20General%20-%20Containers/#course-syllabus","title":"\ud83d\udea9 |  Course Syllabus","text":"<ul> <li>M347 | TBZ | GITLAB</li> </ul>"},{"location":"2%20Year/M347%20-%20Containers/M347%20-%20General%20-%20Containers/#learning-objectives","title":"\ud83d\udca1 |  Learning Objectives","text":"<ul> <li>Basiswissen/Fachbegriffe</li> <li>Docker</li> <li>Dockerfile</li> <li>Kubernetes</li> <li>Create and deploy a fullstack app in Kubernetes</li> </ul>"},{"location":"2%20Year/M347%20-%20Containers/M347%20-%20General%20-%20Containers/#notes-exercises","title":"\ud83d\udcd3 | Notes &amp; Exercises","text":"<ul> <li>Docker Registry and Publish</li> <li>Docker - Cheatsheet</li> </ul>"},{"location":"2%20Year/M347%20-%20Containers/M347%20-%20General%20-%20Containers/#project","title":"\ud83d\udccd| Project","text":""},{"location":"2%20Year/M426%20-%20SCRUM/M426%20-%20General%20-%20%20Agile%20Software%20Development/","title":"M426   General    Agile Software Development","text":""},{"location":"2%20Year/M426%20-%20SCRUM/M426%20-%20General%20-%20%20Agile%20Software%20Development/#course-syllabus","title":"\ud83d\udea9 |  Course Syllabus","text":"<ul> <li>M426 | TBZ | GITLAB</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/M426%20-%20General%20-%20%20Agile%20Software%20Development/#learning-objectives","title":"\ud83d\udca1 |  Learning Objectives","text":"<ul> <li>Being able to distinguish and list process models</li> <li>What are linear/non-linear (iterative) process models?</li> <li>SCRUM: 3-5-3</li> <li>Tasks of the roles?</li> <li>What happens in the ceremonies?</li> <li>What are artifacts?</li> <li>In depth knowledge to SCRUM</li> <li>Create a project in a Team and implement SCRUM</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/M426%20-%20General%20-%20%20Agile%20Software%20Development/#notes","title":"\ud83d\udcd3 | Notes","text":""},{"location":"2%20Year/M426%20-%20SCRUM/M426%20-%20General%20-%20%20Agile%20Software%20Development/#project","title":"\ud83d\udccd| Project","text":""},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/","title":"Scrum   Cheatsheet","text":"<p>Scrum is a flexible way of building software in small, manageable steps. It encourages teamwork, communication, and adapting to changes along the way. Agile development is an approach that prioritizes customer satisfaction, collaboration, and continuous improvement. It involves delivering working software in short cycles, working closely with customers and being open to change throughout the process.</p>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#agile-principles","title":"Agile Principles","text":"<ol> <li>Customer Collaboration over Contract Negotiation.</li> <li>Working Software over Comprehensive Documentation.</li> <li>Responding to Change over Following a Plan.</li> <li>Individuals and Interactions over Processes and Tools.</li> <li>Embracing Change throughout the Project.</li> </ol>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#scrum-framework","title":"Scrum Framework","text":"<ul> <li>Product Backlog: Prioritized list of user stories and features.</li> <li>Sprint Planning: Selecting items from the backlog for the upcoming sprint.</li> <li>Sprint: Fixed timebox (e.g., 1-4 weeks) for development work.</li> <li>Daily Stand-up: Daily 15-minute team meeting to synchronize and plan work.</li> <li>Sprint Review: Demo of completed work to stakeholders and gathering feedback.</li> <li>Sprint Retrospective: Reflection on the sprint and identification of improvement areas.</li> <li>Product Owner: Represents the stakeholders, prioritizes the backlog, and defines requirements.</li> <li>Scrum Master: Facilitates the Scrum process, removes obstacles, and coaches the team.</li> <li>Development Team: Cross-functional team responsible for delivering the product increment.</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#user-stories","title":"User Stories","text":"<ul> <li>Concise, specific, and testable descriptions of desired functionality.</li> <li>Written from the perspective of end users or stakeholders.</li> <li>Follow the INVEST acronym: Independent, Negotiable, Valuable, Estimable, Small, and Testable.</li> <li>Example: \"The user should login into the dashboard\"</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#sprint-planning-meeting","title":"Sprint Planning Meeting","text":"<ul> <li>Product Owner presents the highest-priority items from the backlog.</li> <li>Team discusses and estimates the effort required for each item.</li> <li>Team commits to a set of items to be completed in the upcoming sprint.</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#daily-stand-up-meeting","title":"Daily Stand-up Meeting","text":"<ul> <li>Team members provide updates on:</li> <li>What they did since the last stand-up.</li> <li>What they plan to do until the next stand-up.</li> <li>Any obstacles or challenges they're facing.</li> <li>A quick synchronization meeting, not for detailed discussions.</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#sprint-review-meeting","title":"Sprint Review Meeting","text":"<ul> <li>Team demonstrates completed work to stakeholders.</li> <li>Stakeholders provide feedback and ask questions.</li> <li>Product Owner updates the backlog based on feedback.</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#sprint-retrospective-meeting","title":"Sprint Retrospective Meeting","text":"<ul> <li>Team reflects on the previous sprint.</li> <li>Discusses what went well, what could be improved, and potential action items.</li> <li>Aims to continuously improve the team's processes and practices.</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#burndown-chart","title":"Burndown Chart","text":"<ul> <li>Visualizes the remaining work (usually in story points) over time.</li> <li>Helps track progress during a sprint and identify potential issues.</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#product-increment","title":"Product Increment","text":"<ul> <li>A shippable and potentially releasable version of the product at the end of each sprint.</li> <li>Increment should provide value to stakeholders and be of high quality.</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#kanban-board","title":"Kanban Board","text":"<ul> <li>Visualizes work items and their flow across different stages (e.g., To Do, In Progress, Done).</li> <li>Facilitates transparency, collaboration, and tracking of work progress.</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#definition-of-done-dod","title":"Definition of Done (DoD)","text":"<ul> <li>A set of criteria that defines when a product backlog item is considered complete.</li> <li>Ensures a common understanding of what constitutes a finished work item.</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#continuous-integration-ci","title":"Continuous Integration (CI)","text":"<ul> <li>Frequently integrating code changes into a shared repository.</li> <li>Automated build and testing processes to detect issues early.</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#retrospective-action-items","title":"Retrospective Action Items","text":"<ul> <li>Actionable items identified during retrospectives to improve team processes and practices.</li> <li>Assigned to team members and tracked for completion.</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#backlog-refinement","title":"Backlog Refinement","text":"<ul> <li>Regular activity to review, prioritize, and refine backlog items.</li> <li>Collaborative session involving the Product Owner and the Development Team.</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#spike","title":"Spike","text":"<ul> <li>Timeboxed investigation to gain knowledge or explore solutions for a specific technical challenge or user story.</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#velocity","title":"Velocity","text":"<ul> <li>Measure of the amount of work a team can complete during a sprint.</li> <li>Helps in estimating future work and planning sprints.</li> </ul>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#lifecycle","title":"Lifecycle","text":"<p> Image from: https://brocoders.com/blog/agile-software-development-life-cycle/</p>"},{"location":"2%20Year/M426%20-%20SCRUM/Scrum%20-%20Cheatsheet/#resources","title":"Resources","text":"<ul> <li>https://www.atlassian.com/agile/scrum</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Java%20Testing%20with%20JUnit/","title":"Java Testing with JUnit","text":""},{"location":"3%20Year/450%20-%20Testing/Java%20Testing%20with%20JUnit/#introduction","title":"Introduction","text":"<p>Testing is an integral part of software development that ensures the reliability and correctness of your code. In Java, JUnit is a widely used testing framework that provides a simple and efficient way to write and execute tests.</p>"},{"location":"3%20Year/450%20-%20Testing/Java%20Testing%20with%20JUnit/#getting-started","title":"Getting Started","text":""},{"location":"3%20Year/450%20-%20Testing/Java%20Testing%20with%20JUnit/#step-1-set-up-your-project","title":"Step 1: Set Up Your Project","text":"<p>Make sure you have a Java project set up. You can use a build tool like Maven or Gradle to manage dependencies and build your project.</p>"},{"location":"3%20Year/450%20-%20Testing/Java%20Testing%20with%20JUnit/#step-2-add-junit-dependency","title":"Step 2: Add JUnit Dependency","text":"<p>Add the JUnit dependency to your project. For Maven, add the following to your <code>pom.xml</code> file:</p> <pre><code>&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;junit&lt;/groupId&gt;\n        &lt;artifactId&gt;junit&lt;/artifactId&gt;\n        &lt;version&gt;4.12&lt;/version&gt; &lt;!-- or the latest version --&gt;\n        &lt;scope&gt;test&lt;/scope&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre> <p>For Gradle, add the following to your <code>build.gradle</code> file:</p> <pre><code>testImplementation 'junit:junit:4.12' // or the latest version\n</code></pre>"},{"location":"3%20Year/450%20-%20Testing/Java%20Testing%20with%20JUnit/#step-3-write-your-first-test","title":"Step 3: Write Your First Test","text":"<p>Create a new Java class for your test. The class name should end with <code>Test</code>. For example, if you are testing a class named <code>Calculator</code>, your test class could be named <code>CalculatorTest</code>.</p> <pre><code>import static org.junit.Assert.assertEquals;\nimport org.junit.Test;\n\npublic class CalculatorTest {\n\n    @Test\n    public void testAddition() {\n        Calculator calculator = new Calculator();\n        int result = calculator.add(2, 3);\n        assertEquals(5, result);\n    }\n}\n</code></pre>"},{"location":"3%20Year/450%20-%20Testing/Java%20Testing%20with%20JUnit/#step-4-run-your-tests","title":"Step 4: Run Your Tests","text":"<p>Use your IDE or build tool to run your tests. JUnit will execute the tests and provide a report on the success or failure of each test.</p>"},{"location":"3%20Year/450%20-%20Testing/Java%20Testing%20with%20JUnit/#writing-tests","title":"Writing Tests","text":""},{"location":"3%20Year/450%20-%20Testing/Java%20Testing%20with%20JUnit/#annotations","title":"Annotations","text":"<ul> <li><code>@Test</code>: Denotes a test method.</li> <li><code>@Before</code>: Executed before each test method. Used for setup.</li> <li><code>@After</code>: Executed after each test method. Used for cleanup.</li> <li><code>@BeforeClass</code>: Executed once before any test methods. Used for setup.</li> <li><code>@AfterClass</code>: Executed once after all test methods. Used for cleanup.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Java%20Testing%20with%20JUnit/#assertions","title":"Assertions","text":"<p>JUnit provides various assertion methods for validating expected results.</p> <ul> <li><code>assertEquals(expected, actual)</code>: Asserts that two values are equal.</li> <li><code>assertTrue(condition)</code>: Asserts that a condition is true.</li> <li><code>assertFalse(condition)</code>: Asserts that a condition is false.</li> <li><code>assertNull(object)</code>: Asserts that an object is null.</li> <li><code>assertNotNull(object)</code>: Asserts that an object is not null.</li> </ul> <p>For more information, refer to the JUnit documentation.</p>"},{"location":"3%20Year/450%20-%20Testing/Java%20Testing%20with%20JUnit/#full-usage-example","title":"Full Usage Example","text":"<pre><code>import org.junit.*;\n\npublic class ExampleTestClass {\n\n    // Variables to be used in tests\n    private static int setupCount = 0;\n    private int testCount = 0;\n\n    // @BeforeClass: Executed once before any test methods. Used for setup.\n    @BeforeClass\n    public static void setUpClass() {\n        System.out.println(\"Executing @BeforeClass - This runs once before any test methods.\");\n    }\n\n    // @Before: Executed before each test method. Used for setup.\n    @Before\n    public void setUp() {\n        setupCount++;\n        testCount = 0;\n        System.out.println(\"Executing @Before - This runs before each test method.\");\n    }\n\n    // @Test: Denotes a test method.\n    @Test\n    public void testExample1() {\n        testCount++;\n        System.out.println(\"Executing @Test - Example Test 1\");\n        assertEquals(4, 2 + 2); // assertEquals example\n        assertTrue(testCount &gt; 0); // assertTrue example\n        assertFalse(testCount &gt; 1); // assertFalse example\n        assertNotNull(this); // assertNotNull example\n    }\n\n    // @Test: Another test method\n    @Test\n    public void testExample2() {\n        testCount++;\n        System.out.println(\"Executing @Test - Example Test 2\");\n        assertNull(null); // assertNull example\n        assertNotNull(\"not null\"); // assertNotNull example\n    }\n\n    // @After: Executed after each test method. Used for cleanup.\n    @After\n    public void tearDown() {\n        System.out.println(\"Executing @After - This runs after each test method.\");\n    }\n\n    // @AfterClass: Executed once after all test methods. Used for cleanup.\n    @AfterClass\n    public static void tearDownClass() {\n        System.out.println(\"Executing @AfterClass - This runs once after all test methods.\");\n    }\n}\n</code></pre>"},{"location":"3%20Year/450%20-%20Testing/M450%20-%20General%20-%20Testing/","title":"M450   General   Testing","text":""},{"location":"3%20Year/450%20-%20Testing/M450%20-%20General%20-%20Testing/#course-syllabus","title":"\ud83d\udea9 |  Course Syllabus","text":"<p>...</p>"},{"location":"3%20Year/450%20-%20Testing/M450%20-%20General%20-%20Testing/#learning-objectives","title":"\ud83d\udca1 |  Learning Objectives","text":"<p>...</p>"},{"location":"3%20Year/450%20-%20Testing/M450%20-%20General%20-%20Testing/#notes-exercises","title":"\ud83d\udcd3 | Notes &amp; Exercises","text":"<ul> <li>Java Testing with JUnit</li> <li>Testing Theory</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/","title":"Testing Theory","text":""},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#glossar","title":"Glossar","text":"Begriff Beschreibung UAT User Acceptance Testing QA Quality Assurance SKA Service Level Agreement SUT System under test SDLC System development life cycle SDE Software Development Environment"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#kriterien-fur-gute-testfalle","title":"Kriterien f\u00fcr gute Testf\u00e4lle","text":"<ul> <li>Aus Tests, welche eine hohe Wahrscheinlichkeit von Fehler aufzeigen</li> <li>Aus Tests, die nicht dasselbe testen (keine Redundanz)</li> <li>Aus Tests, die unabh\u00e4ngig von einander sind</li> <li>Aus Tests, die m\u00f6glichst viel Code abdecken</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#v-model","title":"V-Model","text":"<p>![[Pasted image 20231216104124.png]] - Anforderungsdefinition mit den W\u00fcnschen und Anforderungen des Auftraggebers - Funktionaler Systementwurf wo die Anforderungen auf Funktionen und Dialoge abgebildet werden - Technischer Systementwurf wo die technische Realisierung entworfen wird (System wird in Komponente unterteilt, Schnittstellen werden definiert) - Komponentenspezifikation, wo jedes Teilsystem im Detail beschrieben wird - Programmierung, wo jeder Baustein (Modul, Klasse, etc.) in einer Programmiersprache programmiert wird</p>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#test-typen","title":"Test Typen","text":"<ul> <li>Komponententest pr\u00fcft, ob jeder elementare Softwarebaustein seine Vorgaben erf\u00fcllt.</li> <li>Integrationstest pr\u00fcft, ob Gruppen von Komponenten korrekt zusammenspielen</li> <li>Systemtest pr\u00fcft, ob das System als Ganzes die Anforderungen erf\u00fcllt.</li> <li>Abnahmetest pr\u00fcft, ob das System vom Kunden als korrekt akzeptiert wird.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#teststrategie","title":"Teststrategie","text":"<ul> <li>Testobjekte mit einer kurzen Auflistung aus welchen Teilen die Software besteht</li> <li>Auflistung was genau getestet wird (welche Funktionen zu testen sind, bzw. Und welche nicht getestet werden</li> <li>Testmethode ausw\u00e4hlen</li> <li>Welche Testinfrastruktur verwendet wird</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#testobjekte","title":"Testobjekte","text":"<p>Hier handelt es sich um die Komponente oder Teil der Applikation, welches getestet wird. Typische Testobjekte sind Programmmodule oder Units (z.Bsp. eine Klasse). Aber auch Kommandozeilenskripte des Betriebssystems, DB-Skripte oder Datenkonvertierungsprozeduren k\u00f6nnen Testobjekte sein.</p>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#testfalle","title":"Testf\u00e4lle","text":"<ul> <li>Funktionale Testf\u00e4lle: Beschreiben die Funktionen einer Software, welche vom Kunden urspr\u00fcnglich als Anforderung definiert worden sind.</li> <li>Nicht-funktionale Testf\u00e4lle: Testf\u00e4lle welche nicht generell mit der Applikation zutun haben. (Performance etc.)</li> <li>Wir werden uns in diesem Modul nur auf funktionales Testing beschr\u00e4nken.</li> <li>Abstrakte Testf\u00e4lle: keine konkreten Ein- und Ausgabewerte, sondern wir verwenden logische Operatoren</li> <li>Konkrete Testf\u00e4lle: konkreten Wertangaben f\u00fcr die Ein- und Ausgabe</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#testmethoden","title":"Testmethoden","text":"<ul> <li>Whitebox: Code sichtbar; Code-Pfad Testing</li> <li>Blackbox: Kennen den Code nicht, schon kompliliert/deployed.</li> <li>Automatisierte Testf\u00e4lle: automatisiert Test Case Suiten (ganze Reihen von Tests) auszuf\u00fchren.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#testlevels","title":"Testlevels","text":"<p>![[Pasted image 20231216104827.png]]</p>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#unittest","title":"Unittest","text":"<ul> <li>Wird manchmal zum Unit Testing Level dazu gez\u00e4hlt</li> <li>Von Entwickler geschrieben und ausgef\u00fchrt</li> <li>White-Box-Test</li> <li>Hier wird das Zusammenspiel zwischen mehreren Komponenten getestet</li> <li>Schnittstellen jedoch wie z.B. zu einer Datenbank werden hier gemockt<ul> <li>Andere Beispiele von Schnittstellen:<ul> <li>Externe APIs</li> <li>Message queues</li> </ul> </li> </ul> </li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#component-testing","title":"Component Testing","text":"<ul> <li>Wird manchmal zum Unit Testing Level dazu gez\u00e4hlt</li> <li>Von Entwickler geschrieben und ausgef\u00fchrt</li> <li>White-Box-Test</li> <li>Hier wird das Zusammenspiel zwischen mehreren Komponenten getestet</li> <li>Schnittstellen jedoch wie z.B. zu einer Datenbank werden hier gemockt<ul> <li>Andere Beispiele von Schnittstellen:<ul> <li>Externe APIs</li> <li>Message queues</li> </ul> </li> </ul> </li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#intergration-testing","title":"Intergration Testing","text":"<ul> <li>Wird von einem Tester (oder ganzes QA Team) ausgef\u00fchrt</li> <li>Black-Box-Test</li> <li>Hier werden Integration wie z.B. zu einer Datenbank (oder APIs / Message queues) nicht mehr gemockt sondern aktiv benutzt</li> <li>Beispiel: Der Tester ruft eine API auf welche dann eine Datenbank einen Zugriff macht (der Tester kennt das innere der API jedoch nicht)</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#system-testing","title":"System Testing","text":"<ul> <li>Wird von den gleichen Team, welche die Integrations Tests gemacht haben, getestet</li> <li>Black-Box-Test</li> <li>Hier wird die Software als ganzes getestet, um sicherzustellen, dass alle Requirements erf\u00fcllt sind</li> <li>Eine Umgebung die M\u00f6glichst nahe an der Live Umgebung ist, wird hier benutzt</li> <li>Funktionale und Nichtfunktionale Anforderungen werden hier getestet</li> <li>Nichtfunktionale Tests w\u00e4ren hier zum Beispiel:<ul> <li>Performance Testing um Bottlenecks bez\u00fcglich Performanz zu finden. Hier kann nochmals zwischen folgenden unterschieden werden:<ul> <li>Load Testing -&gt; Um zu verstehen wie sich die Software z.B. bei einer gesetzten Anzahl an Requests verh\u00e4lt</li> <li>Stress Testing -&gt; Um ein Limit der Software zu wissen</li> </ul> </li> <li>Usability Testing um Fehler oder Verbesserungen zu finden, in dem man den Benutzer beobachtet wie er die Software bedient</li> <li>Security Testing um z.B. zu Testen ob die Authentifizierung sicher ist</li> </ul> </li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#acceptance-testing","title":"Acceptance Testing","text":"<ul> <li>Wird in der Regel vom Business / Kunden getestet</li> <li>Black-Box-Test</li> <li>Hier wird vom Kunden sichergestellt, ob das System die Akzeptanz Kriterien erf\u00fcllt</li> </ul> <p>![[Pasted image 20231216104955.png]]</p> Automation Testing Manual Testing Zuverl\u00e4ssig, jeder Test ist programmiert / scripted Unzuverl\u00e4ssig, Menschliche Fehler passieren schnell Riesiger Initial Aufwand, Billiger auf lange Zeit Initialer Aufwand ist kleiner. ROI ist kleiner auf lange Zeit gesehen Ist eine sehr zeitsparende Option f\u00fcr Regression Testing (Tests welche mehrere Male ausgef\u00fchrt werden sollen). Eher eine Option wenn die gleichen Tests nicht laufend wieder ausgef\u00fchrt werden m\u00fcssen. Ausf\u00fchrung durch einen einzigen Knopfdruck (oder automatisiert durch einen Trigger) Ausf\u00fchrung braucht sehr viel Ressourcen (Mitarbeiter multipliziert mit den Anzahl Stunden) Exploratives Testen nicht m\u00f6glich Exploratives Testen m\u00f6glich Performanz Testing ist m\u00f6glich Performanz Testing ist nicht m\u00f6glich Tests k\u00f6nnen parallelisiert ausgef\u00fchrt werden Braucht mehr Ressourcen um parallel zu Testen Braucht Programmier/Scripting Skills um Tests zu erstellen Brauch sehr wenig Wissen um einen Test auszuf\u00fchren Professionelle Testing Tools k\u00f6nnen sehr schnell teuer werden -"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#schritte-um-automatisiertes-testing-aufzusetzen","title":"Schritte um Automatisiertes Testing aufzusetzen","text":"<ul> <li>Geeignetes Test Tool ausw\u00e4hlen</li> <li>Den Scope (Anwendungsbereich) der Automation definieren</li> <li>Test Cases<ul> <li>Planen</li> <li>Definieren</li> <li>Implementieren</li> </ul> </li> <li>Tests ausf\u00fchren</li> <li>Tests warten (Maintenance)</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#auto-test-typen","title":"Auto-Test Typen","text":"<p>Funktionstests: - Konzentriert sich darauf, ob die Software f\u00fcr einen bestimmten Eingabeaufforderung den richtigen Ausgabewert liefert. - Beispiel: \u00dcberpr\u00fcfung, ob ein Benutzer sich erfolgreich auf einer Webseite anmelden kann.</p> <p>Nicht-funktionale Tests: - Beziehen sich auf Aspekte der Software, die nicht unbedingt mit einer bestimmten Funktion oder Benutzeraktion zusammenh\u00e4ngen. - Beispiele sind Skalierbarkeit, Verhalten unter Stressbedingungen und Sicherheit.</p> <p>Smoke-Tests (Sanity-Tests): - Enthalten minimale Tests, um festzustellen, ob grundlegende Probleme vorhanden sind, die das Funktionieren der Software verhindern. - Es werden nur die essenziellsten Funktionen getestet.</p> <p>Regressionstests: - Zielen darauf ab, Fehler nach einer gr\u00f6\u00dferen Code-\u00c4nderung zu finden. - Identifizieren Software-Regressionen, bei denen zuvor funktionierende Funktionen nicht mehr wie beabsichtigt arbeiten. - Werden \u00fcblicherweise nach neuen Code-\u00c4nderungen durchgef\u00fchrt, um unbeabsichtigte Konsequenzen zu entdecken.</p> <p>Schl\u00fcsselwortgesteuertes Testen: - Testansatz, bei dem Schl\u00fcsselw\u00f6rter oder Aktionen verwendet werden, um verschiedene Funktionen eines Systems zu testen.</p> <p>Datengetriebenes Testen: - Testansatz, bei dem Testf\u00e4lle auf der Grundlage von Eingabedatens\u00e4tzen entworfen werden. - Tests werden mit verschiedenen Datens\u00e4tzen ausgef\u00fchrt, um verschiedene Szenarien zu validieren.</p>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#test-doubles","title":"Test Doubles","text":"<ul> <li>Definition:<ul> <li>Objekte oder Systeme, die anstelle anderer Elemente in Tests verwendet werden.</li> </ul> </li> <li>Kategorien:<ul> <li>Mocks (mock, spy)</li> <li>Stubs (stub, dummy, fake)</li> </ul> </li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#mocks-vs-stubs","title":"Mocks vs. Stubs:","text":"<ul> <li>Zweck:<ul> <li>Beseitigung von Testabh\u00e4ngigkeiten, um sich auf die \u00dcberpr\u00fcfung bestimmter Funktionalit\u00e4ten zu konzentrieren.</li> </ul> </li> <li>Mocks:<ul> <li>\u00dcberpr\u00fcfen Interaktionen zwischen dem zu testenden System (SUT) und seinen Kollaborateuren.</li> <li>\u00dcberpr\u00fcfen, ob Methoden korrekt aufgerufen werden.</li> </ul> </li> <li>Stubs:<ul> <li>Liefern vordefinierte Daten an das SUT.</li> <li>Direkte \u00dcberpr\u00fcfung, ob das SUT das richtige Ergebnis mit den bereitgestellten Daten produziert.</li> </ul> </li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#lebenszyklus","title":"Lebenszyklus:","text":"<ol> <li>Setup:<ul> <li>Vorbereitung des SUT und seiner Stub-Kollaborateure.</li> <li>Erwartungen f\u00fcr Mocks festlegen.</li> </ul> </li> <li>Anwenden:<ul> <li>Testen der Funktionalit\u00e4t.</li> <li>Methodenaufrufe auf Mocks ausl\u00f6sen oder Daten an Stubs bereitstellen.</li> </ul> </li> <li>\u00dcberpr\u00fcfen:<ul> <li>\u00dcberpr\u00fcfen des Zustands des Objekts oder \u00dcberpr\u00fcfen von Erwartungen f\u00fcr Mocks.</li> </ul> </li> <li>Aufr\u00e4umen:<ul> <li>Ressourcen bereinigen.</li> </ul> </li> </ol>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#arten-von-test-doubles","title":"Arten von Test Doubles:","text":"<ul> <li>Mock:<ul> <li>Erwartet bestimmte Aufrufe und \u00fcberpr\u00fcft Interaktionen.</li> </ul> </li> <li>Spy:<ul> <li>Protokolliert und stellt Daten f\u00fcr die Analyse bereit, \u00e4hnlich wie ein Spion.</li> </ul> </li> <li>Dummy:<ul> <li>Einfache Objekte, h\u00e4ufig f\u00fcr die Initialisierung von Konstruktoren verwendet.</li> </ul> </li> <li>Stub:<ul> <li>Bietet vordefinierte Daten f\u00fcr Tests, n\u00fctzlich, um unerw\u00fcnschte Nebenwirkungen zu vermeiden.</li> </ul> </li> <li>Fake:<ul> <li>Hat funktionale Implementierungen, die sich von der Produktionscode unterscheiden.</li> </ul> </li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#mockito","title":"Mockito:","text":"<ul> <li>Ein umfassendes Mocking-Framework, das Dummies, Mocks, Spys und Stubs unterst\u00fctzt.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#zusatzliche-anwendungsfalle","title":"Zus\u00e4tzliche Anwendungsf\u00e4lle:","text":"<ul> <li>Frameworks wie WireMock initialisieren HTTP-Mock-Server, um APIs zu mocken und HTTP-Antworten zu stubben.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#teststrategie-und-testkonzept","title":"Teststrategie und Testkonzept","text":"<p>Teststrategie und Testkonzept sind wesentliche Komponenten f\u00fcr erfolgreiches Testen. Die Teststrategie beschreibt den Testansatz, w\u00e4hrend das Testkonzept diesen Ansatz definiert. Ein Testkonzept, oft auch als Testplan bezeichnet, umfasst Elemente wie:</p>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#testkonzept-nach-ieee-829","title":"Testkonzept nach IEEE 829","text":"<p>Der IEEE 829 Standard dient als Empfehlung f\u00fcr ein Testkonzept und bietet eine detaillierte Liste aller notwendigen Elemente. Diese Elemente k\u00f6nnen als Checkliste betrachtet werden. Die wichtigsten Elemente sind:</p>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#introduction","title":"Introduction","text":"<ul> <li>Kurze Beschreibung der Applikation f\u00fcr ein gemeinsames Verst\u00e4ndnis.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#test-items","title":"Test Items","text":"<ul> <li>Auflistung und Beschreibung der zu testenden Elemente mit einer Architekturskizze.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#features-to-be-tested","title":"Features to be tested","text":"<ul> <li>Detaillierte Liste der zu testenden Funktionalit\u00e4ten, abgeleitet von den Test Items.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#features-not-to-be-tested","title":"Features not to be tested","text":"<ul> <li>Beschreibung der Funktionalit\u00e4ten, die nicht getestet werden, wie z.B. nicht-funktionale Aspekte.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#approach","title":"Approach","text":"<ul> <li>Beschreibung der angewandten Testmethode, z.B., durch TDD im Entwicklerteam.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#item-pass-fail-criteria","title":"Item pass / fail criteria","text":"<ul> <li>Festlegung der Kriterien f\u00fcr erfolgreiche und nicht erfolgreiche Tests.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#test-deliverables","title":"Test Deliverables","text":"<ul> <li>Beschreibung der Test-Artefakte, einschlie\u00dflich Dokumente und Tools wie das Testkonzept oder Testwerkzeuge wie Postman.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#testing-tasks","title":"Testing Tasks","text":"<ul> <li>Beschreibung der Teststufen, von Unit-Tests bis zu m\u00f6glichen Integrationstests.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#environmental-needs","title":"Environmental Needs","text":"<ul> <li>Beschreibung der f\u00fcr das Testing ben\u00f6tigten Testumgebungen (Hardware und Software).</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#schedule","title":"Schedule","text":"<ul> <li>Zeitplan f\u00fcr die Durchf\u00fchrung der Tests, angepasst an den gew\u00e4hlten Entwicklungsansatz.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#test-driven-development-tdd","title":"Test Driven Development (TDD)","text":"<p>Test Driven Development, kurz TDD, existiert seit etwa 2003 und ist ein wesentlicher Bestandteil von Agile Programming. Ron Jeffries, ein Coach von Extreme Programming, verspricht \"Clean code that works\", wenn TDD regelm\u00e4\u00dfig trainiert und konsequent angewendet wird. Extreme Programming folgt dem Agile Manifest, daher ergibt die Anwendung von TDD in agilen Teams Sinn. Es kann jedoch herausfordernd sein, TDD in Projekten zu implementieren, die nicht von Anfang an darauf ausgerichtet waren.</p>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#was-ist-tdd","title":"Was ist TDD?","text":"<p>TDD bedeutet, Tests zu verwenden, die das Schreiben des Codes antreiben. Der TDD-Workflow besteht aus den Schritten Red, Green und Refactor:</p> <ul> <li>Red: Tests f\u00fcr die erwartete Business-Logik schreiben, die zu diesem Zeitpunkt fehlschlagen werden, da noch kein Code vorhanden ist.</li> <li>Green: Code schreiben oder korrigieren, um die Tests erfolgreich zu machen.</li> <li>Refactor: Nach erfolgreichem Testen von Code und Tests, den Code und die Tests verbessern, um sie effizienter zu gestalten. Dieser Prozess wiederholt sich iterativ, beginnend mit dem Schritt Red.</li> </ul> <p>TDD-Mantra: Immer zuerst einen fehlschlagenden Test schreiben, bevor auch nur eine Zeile \"richtigen\" Codes erstellt wird. Jeder Test sollte nur eine identifizierbare Logik oder Verhaltenseinheit \u00fcberpr\u00fcfen - also handelt es sich um Unit Tests.</p>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#best-practices-fur-test-driven-development","title":"Best Practices f\u00fcr Test Driven Development","text":"<p>TDD betont das Schreiben von Tests vor dem eigentlichen Code und folgt einem zyklischen Prozess. Hier sind bew\u00e4hrte Verfahren:</p> <ol> <li>Klares Verst\u00e4ndnis der Anforderungen:<ul> <li>Verstehen Sie die Anforderungen oder Spezifikationen der zu entwickelnden Funktion, um gezielte Tests zu schreiben.</li> </ul> </li> <li>Atomare Tests schreiben:<ul> <li>Jeder Test sollte sich auf ein spezifisches Verhalten oder eine bestimmte Funktionalit\u00e4t konzentrieren, um die Lesbarkeit und Wartbarkeit zu verbessern.</li> </ul> </li> <li>Einfachsten Testfall zuerst schreiben:<ul> <li>Beginnen Sie mit dem einfachsten Testfall, der fehlschlagen wird, um sich auf die unmittelbare Aufgabe zu konzentrieren.</li> </ul> </li> <li>Tests f\u00fcr Randf\u00e4lle einbeziehen:<ul> <li>Ber\u00fccksichtigen Sie Randbedingungen und Randf\u00e4lle, um potenzielle Fehler oder unerwartetes Verhalten aufzudecken.</li> </ul> </li> <li>Regelm\u00e4\u00dfiges Refactoring:<ul> <li>Nach einem bestandenen Test Zeit nehmen, den Code zu refaktorieren und das Design zu verbessern, ohne das Verhalten zu \u00e4ndern.</li> </ul> </li> <li>Schnelle Feedbackschleife beibehalten:<ul> <li>Testsuite sollte schnell ausgef\u00fchrt werden, um sofortiges Feedback \u00fcber den Zustand des Codes zu erhalten.</li> </ul> </li> <li>Automatisierung der Tests:<ul> <li>Nutzen Sie Testautomatisierungs-Frameworks und -Tools, um Tests zu automatisieren und konsistente Ergebnisse sicherzustellen.</li> </ul> </li> <li>Red-Green-Refactor-Zyklus befolgen:<ul> <li>Halten Sie sich an den TDD-Zyklus: Schreiben Sie einen fehlgeschlagenen Test (Red), implementieren Sie den minimalen Code, um den Test zu bestehen (Green), und \u00fcberarbeiten Sie dann den Code (Refactor). Wiederholen Sie diesen Zyklus f\u00fcr jedes neue Verhalten oder jede Funktion.</li> </ul> </li> <li>Kontinuierliche Ausf\u00fchrung von Tests:<ul> <li>Integrieren Sie die Testsuite in Ihre Entwicklungsumgebung, richten Sie Pipelines f\u00fcr die kontinuierliche Integration (CI) ein und f\u00fchren Sie Tests automatisch aus, wenn Code\u00e4nderungen vorgenommen werden.</li> </ul> </li> </ol>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#vorteile-von-tdd","title":"Vorteile von TDD","text":"<ul> <li>Kostenreduktion</li> <li>Schnelleres Refactoring und Neuschreiben von Code</li> <li>Vereinfachtes Onboarding neuer Teammitglieder</li> <li>Vermeidung von Bugs und Kopplung</li> <li>Verbesserte Teamzusammenarbeit</li> <li>Erh\u00f6htes Vertrauen in die Code-Funktionalit\u00e4t</li> <li>Verbesserte Coding Patterns</li> <li>Beseitigung der Angst vor Ver\u00e4nderungen</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#automatisiertes-testen-und-deployen","title":"Automatisiertes Testen und Deployen","text":"<ul> <li>Pipeline: Die Top-Level Komponente, in der \"Stages\" und \"Jobs\" deklariert werden k\u00f6nnen.</li> <li>Stage: Beschreibt die einzelne Phase in der Pipeline. Eine Stage besteht aus einem oder mehreren Jobs.</li> <li>Job: Ein einzelner Prozess innerhalb einer Stage. Ein Job k\u00f6nnte beispielsweise das Kompilieren von Code sein.</li> <li>Runner: Eine Open-Source-Anwendung, die die einzelnen Jobs ausf\u00fchrt. Die App kann lokal installiert oder in einer Cloud-Umgebung verwendet werden (Shared Runners werden auf GitLab gehostet).</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#cicd","title":"CI/CD","text":"<pre><code>stages:          # List of stages for jobs, and their order of execution\n  - build\n  - test\n  - deploy\n\nbuild-job:       # This job runs in the build stage, which runs first.\n  stage: build\n  script:\n    - echo \"Compiling the code...\"\n    - echo \"Compile complete.\"\n\nunit-test-job:   # This job runs in the test stage.\n  stage: test    # It only starts when the job in the build stage completes successfully.\n  script:\n    - echo \"Running unit tests... This will take about 60 seconds.\"\n    - sleep 60\n    - echo \"Code coverage is 90%\"\n\n# Optional\nlint-test-job:   # This job also runs in the test stage.\n  stage: test    # It can run at the same time as unit-test-job (in parallel).\n  script:\n    - echo \"Linting code... This will take about 10 seconds.\"\n    - sleep 10\n    - echo \"No lint issues found.\"\n\ndeploy-job:      # This job runs in the deploy stage.\n  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.\n  environment: production\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Application successfully deployed.\"\n</code></pre>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#deployment-enviroment","title":"Deployment Enviroment","text":"<p>![[Pasted image 20231216111737.png]]</p> <ul> <li>Entwicklungsumgebung (Dev): Hier entwickeln Entwickler neuen Code auf ihren Workstations. Unterscheidet sich von der Produktionsumgebung durch Entwicklertools.</li> <li>Testumgebung: Hier testen menschliche Tester neuen Code, entweder durch automatisierte oder manuelle Tests. Nach erfolgreichen Tests erfolgt die automatische \u00dcbertragung in die n\u00e4chste Umgebung.</li> <li>Staging-Umgebung: Testumgebung, die der Produktionsumgebung entspricht. Hier werden Installations-/Konfigurations-/Migrations-Skripte getestet. Auch f\u00fcr Leistungs- und Lasttests sowie Vorschauen f\u00fcr Kunden genutzt.</li> <li>Produktionsumgebung (Live): Die Umgebung, mit der Benutzer direkt interagieren. Hier wird der Code live bereitgestellt. Der heikelste Schritt in der Softwareentwicklung.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#good-to-know","title":"Good to know","text":"<ul> <li>Patch: Sofortige Softwareupdates zur Behebung von Problemen, meist im laufenden Betrieb.</li> <li>Update: Aktualisiert die Software, behebt Fehler, verbessert die Performance. Kleine Erweiterungen k\u00f6nnen enthalten sein, aber keine substantiellen Ver\u00e4nderungen.</li> <li>Upgrade: Erweitert die Software auf verschiedenen Ebenen, mit neuen Funktionen und m\u00f6glicherweise einer neuen Struktur. Die Software r\u00fcckt in eine neue Produktklasse.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#code-review","title":"Code Review","text":""},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#beispiel-ablauf-per-gitlab","title":"Beispiel Ablauf per GitLab","text":"<ol> <li>Entwickler erstellt Feature Branch.</li> <li>Feature wird implementiert und committet.</li> <li>Durch Push wird automatisch ein Link f\u00fcr einen Merge Request (PR) erstellt.</li> <li>PR-Titel und -Beschreibung werden festgelegt.</li> <li>Reviewer pr\u00fcfen den Code und kommentieren.</li> <li>Nach Diskussionen wird der PR genehmigt und der Code gemerged.</li> </ol>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#aufgaben-eines-prufers","title":"Aufgaben eines Pr\u00fcfers","text":"<ul> <li>\u00dcberpr\u00fcfung von Funktionalit\u00e4t und Implementierungsqualit\u00e4t.</li> <li>Kommentare zu \u00c4nderungen.</li> <li>Idealerweise kleinere PRs f\u00fcr effiziente Reviews.</li> <li>Code-Qualit\u00e4t anhand von Checklisten und Best Practices beurteilen.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#qualitat-des-codes-ein-paar-beispiele","title":"Qualit\u00e4t des Codes (ein paar Beispiele)","text":"<ul> <li>Kommentare, Naming, Logik-Fehler, Typos.</li> <li>Verst\u00e4ndlichkeit, Einhaltung von Prinzipien (YAGNI, DRY, KISS, SRP).</li> <li>Existenz und Abdeckung von Tests.</li> <li>Gepflegtheit des Codes.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#ressourcen","title":"Ressourcen","text":"<ul> <li>Verwendung von Checklisten und Kenntnis von Best Practices.</li> <li>Bezugnahme auf bew\u00e4hrte Prinzipien aus B\u00fcchern wie \"Clean Code\" und \"Effective Java\".</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#soziale-aspekte-eines-prufers","title":"Soziale Aspekte eines Pr\u00fcfers","text":"<ul> <li>Respektvoller Umgang mit dem pers\u00f6nlichen Beitrag jedes Entwicklers.</li> <li>Professionelles Verhalten und konstruktive Kritik.</li> <li>Detaillierte Antworten und Vorschl\u00e4ge.</li> <li>Separate Anmerkungen f\u00fcr \u00fcbergeordnete Vorschl\u00e4ge.</li> </ul>"},{"location":"3%20Year/450%20-%20Testing/Testing%20Theory/#abschluss-und-merge-varianten","title":"Abschluss und Merge Varianten","text":"<ul> <li>Genehmigte PRs werden in den Master Branch gemerged.</li> <li>Default ist ein Merge-Commit.</li> <li>Beachtung alternativer Merge-Varianten, je nach Projektanforderungen.</li> </ul>"}]}